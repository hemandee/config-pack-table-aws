{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?2623","webpack:///./src/components/Table.vue?4566","webpack:///./src/components/customTooltip.vue?1c53","webpack:///src/components/customTooltip.vue","webpack:///./src/components/customTooltip.vue?0ea5","webpack:///./src/components/customTooltip.vue?08f4","webpack:///./src/components/ruleSetFilter.vue?8cf7","webpack:///src/components/ruleSetFilter.vue","webpack:///./src/components/ruleSetFilter.vue?8087","webpack:///./src/components/ruleSetFilter.vue","webpack:///./src/helper/genCloudformation.js","webpack:///src/components/Table.vue","webpack:///./src/components/Table.vue?e306","webpack:///./src/components/Table.vue?3e2b","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/plugins/vuetify.js","webpack:///./src/registerServiceWorker.js","webpack:///./src/main.js","webpack:///./src/components/Table.vue?5d01","webpack:///./src/components/customTooltip.vue?4e83"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticRenderFns","staticStyle","on","downloadCSV","flipColumnsLoading","flipColumnsTable","model","callback","$$v","flipColumns","expression","$event","missingRulesDialog","staticClass","_s","version","date","_l","item","index","headers","defaultColDef","overlayLoadingTemplate","onGridReady","beforeMount","params","column","getColId","component","fullList","singleSelect","hideHeaders","itemspage","hidefooter","selected","props","text","console","log","initData","watch","updateFilter","paramsListChange","methods","rowModel","gridApi","forEachNode","paramsList","map","filterChangedCallback","destroyFilter","doesFilterPass","flatten","includes","NAME","isFilterActive","getModel","setModel","VDataTable","cloudformationtemplate","AWSTemplateFormatVersion","Description","Date","toISOString","Parameters","MaximumExecutionFrequency","Type","Default","MinLength","ConstraintDescription","AllowedValues","Resources","cfinput","flip","addConfigPacks","addRules","element","Set","forEach","ruleFactory","printCloudformation","TOTAL_RULES","URL","keys","concat","JSON","stringify","rule","replaceAll","toLocaleLowerCase","configFactory","Properties","ConfigRuleName","InputParameters","Scope","Source","Owner","SourceIdentifier","Ref","created","initialize","parsePacks","toolTipValueGetter","rule_set","data_rule_set","parseHeaders","missingRules","data_headers","filter","genHeaders","api","gridColumnApi","columnApi","columns","field","sortable","resizable","tooltipValueGetter","tooltipComponentFramework","findIndex","isName","isTotalCount","isURL","pinned","rowDrag","lockPinned","filterFramework","filterParams","width","hide","logMsg","msg","message","exportDataAsCsv","toCF","showLoadingOverlay","setTimeout","vueFilterInstance","components","ruleSetFilter","customTooltip","VBtn","VCard","VCardActions","VCardText","VCardTitle","VCol","VDialog","VDivider","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VIcon","VRow","VSpacer","VSwitch","VToolbar","Table","VApp","VAppBar","VAppBarTitle","VMain","Vue","use","Vuetify","register","process","ready","registered","cached","updatefound","updated","offline","error","config","productionTip","vuetify","render","h","App","$mount"],"mappings":"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","file":"js/app.0353f16a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/config-pack-table-aws/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',[_c('v-app-bar',{attrs:{\"app\":\"\",\"color\":\"primary\",\"dark\":\"\"}},[_c('v-app-bar-title',[_vm._v(\" Table of Managed Config Conformance Packs and included rules with Export to CSV and Filter Options\")])],1),_c('v-main',[_c('Table')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"column\",\"height\":\"100%\"}},[_c('v-expansion-panels',[_c('v-expansion-panel',[_c('v-expansion-panel-header',[_c('h4',[_vm._v(\" How to Use \")])]),_c('v-expansion-panel-content',[_c('div',[_vm._v(\" Features: \"),_c('ul',[_c('li',[_vm._v(\"Drag by Name Columns\")]),_c('li',[_vm._v(\"Filter by list of Name (Disables Drag)\")]),_c('li',[_vm._v(\"Sort by TOTAL_RULES\")]),_c('li',[_vm._v(\"Filter each Rule contains by 'X'\")]),_c('li',[_vm._v(\"Extra Rule that are not in Conformance packs\")]),_c('li',[_vm._v(\" Export filtered table to csv for use in Excel or other applications \")]),_c('li',[_vm._v(\"Select Rows to generate template\")])])])])],1)],1),_c('v-toolbar',{attrs:{\"dense\":\"\"}},[_c('v-btn',{on:{\"click\":_vm.downloadCSV}},[_c('v-icon',{attrs:{\"large\":\"\"}},[_vm._v(\" mdi-export \")]),_vm._v(\" Export to CSV \")],1),_c('v-spacer'),_c('v-spacer'),_c('v-switch',{attrs:{\"loading\":_vm.flipColumnsLoading},on:{\"change\":_vm.flipColumnsTable},model:{value:(_vm.flipColumns),callback:function ($$v) {_vm.flipColumns=$$v},expression:\"flipColumns\"}}),_c('v-spacer'),_c('v-btn',{on:{\"click\":function($event){_vm.missingRulesDialog = true}}},[_vm._v(\" Extra Rules \")])],1),_c('v-dialog',{attrs:{\"value\":_vm.missingRulesDialog,\"width\":\"500\",\"fullscreen\":\"\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"text-h5 grey lighten-2\"},[_vm._v(\" Extra Rules not in Config Packs \"),_c('v-btn',{attrs:{\"color\":\"primary\",\"text\":\"\"},on:{\"click\":function($event){_vm.missingRulesDialog = false}}},[_vm._v(\" Close \")])],1),_c('v-card-text',[_c('div',{staticClass:\"missing_rules_columns\"},[_vm._v(\" Updated \"+_vm._s(_vm.version.date)+\" \"),_vm._l((_vm.missingRules),function(item,index){return _c('div',{key:index},[_vm._v(\" \"+_vm._s(item)+\" \")])})],2)]),_c('v-divider'),_c('v-card-actions',[_c('v-spacer')],1)],1)],1),_c('v-row',[_vm._v(\" >\"),_c('v-col',[void 0],2)],1),_c('ag-grid-vue',{staticClass:\"ag-theme-alpine\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},attrs:{\"columnDefs\":_vm.headers,\"rowData\":_vm.data,\"rowDragManaged\":\"true\",\"animateRows\":\"true\",\"debug\":\"false\",\"tooltipShowDelay\":\"0\",\"defaultColDef\":_vm.defaultColDef,\"tooltipMouseTrack\":\"true\",\"overlayLoadingTemplate\":_vm.overlayLoadingTemplate,\"rowMultiSelectWithClick\":true,\"rowSelection\":\"multiple\"},on:{\"grid-ready\":_vm.onGridReady}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tooltip\"},[_c('p',[_vm._v(_vm._s(_vm.data))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"tooltip\">\n    <p>{{ data }}</p>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"customTooltip\",\n  data: () => ({ data: null }),\n  beforeMount() {\n    if (this.params.value == \"X\") {\n      this.data = this.params.column.getColId() || \"Empty\";\n    } else {\n      this.data = this.params.value;\n    }\n  },\n};\n</script>\n<style>\n.tooltip {\n  position: absolute;\n}\n\n.tooltip.ag-tooltip-hiding {\n  opacity: 0;\n}\n\n.tooltip p {\n  font-weight: bold;\n  background-color: skyblue;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./customTooltip.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./customTooltip.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./customTooltip.vue?vue&type=template&id=68d0a713&\"\nimport script from \"./customTooltip.vue?vue&type=script&lang=js&\"\nexport * from \"./customTooltip.vue?vue&type=script&lang=js&\"\nimport style0 from \"./customTooltip.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"padding\":\"4px\"}},[_c('div',{staticStyle:{\"font-weight\":\"bold\"}},[_vm._v(\"Rule Set\")]),_c('div',[_c('v-data-table',{staticClass:\"elevation-1\",attrs:{\"items\":_vm.data.fullList,\"single-select\":_vm.singleSelect,\"show-select\":\"\",\"item-key\":\"name\",\"headers\":_vm.headers,\"hide-default-header\":_vm.hideHeaders,\"items-per-page\":_vm.itemspage,\"hide-default-footer\":_vm.hidefooter},model:{value:(_vm.selected),callback:function ($$v) {_vm.selected=$$v},expression:\"selected\"}})],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"padding: 4px;\">\n    <div style=\"font-weight: bold;\">Rule Set</div>\n\n    <div>\n      <v-data-table\n        v-model=\"selected\"\n        :items=\"data.fullList\"\n        :single-select=\"singleSelect\"\n        show-select\n        class=\"elevation-1\"\n        item-key=\"name\"\n        :headers=\"headers\"\n        :hide-default-header=\"hideHeaders\"\n        :items-per-page=\"itemspage\"\n        :hide-default-footer=\"hidefooter\"\n      >\n      </v-data-table>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"ruleSetFilter\",\n  props: [\"rowData\"],\n  data: () => ({\n    // rowData: this.rowData,\n    fullList: [\n      {\n        name: \"CIS-AWS-FB-v1.3-Level1\",\n      },\n      {\n        name: \"AWS-Well-Architected-Security-Pillar\",\n      },\n    ],\n    singleSelect: false,\n    selected: [],\n    hideHeaders: false,\n    itemspage: -1,\n    hidefooter: true,\n    paramsListChange: [],\n    headers: [\n      {\n        text: \"Name\",\n        value: \"name\",\n      },\n    ],\n  }),\n  beforeMount() {\n    console.log(\"rowData\");\n    console.log(this);\n    this.initData();\n  },\n\n  watch: {\n    selected: function() {\n      console.log(\"selected\");\n      this.updateFilter();\n    },\n    paramsListChange: function() {\n      // this.initData();\n      console.log(\"fullList updated\");\n      this.updateFilter();\n    },\n  },\n  methods: {\n    initData() {\n      console.log(\"before mount\");\n      console.log(\"props\");\n      console.log(this.params.rowModel.gridApi);\n      this.data = {};\n      // let paramsList = this.params.api\n      //   .getModel()\n      //   .rowsToDisplay.map((element) => element.data.NAME);\n      let paramsList = [];\n      this.params.rowModel.gridApi.forEachNode((node) =>\n        paramsList.push(node.data.NAME)\n      );\n      // console.log(paramsList);\n      // console.log(this.params.rowModel.gridApi);\n      this.data.fullList = paramsList.map((elem) => ({ name: elem }));\n      this.selected = this.data.fullList;\n      this.paramsListChange = paramsList;\n    },\n    updateFilter() {\n      console.log(\"update filter\");\n      //forEachNode(node => console.log(node.data.NAME))\n      this.params.filterChangedCallback();\n    },\n    destroyFilter() {\n      console.log(\"destroy filter\");\n      this.gridApi.destroyFilter(\"NAME\");\n    },\n    doesFilterPass(params) {\n      let flatten = this.selected.map((elem) => elem.name);\n      // console.log(\"params\");\n      // console.log(params);\n      // console.log(flatten);\n      return flatten.includes(params.data.NAME);\n    },\n\n    isFilterActive() {\n      console.log(\"filteractive\");\n      return (\n        this.selected != null &&\n        this.selected !== \"\" &&\n        this.selected != this.fullList\n      );\n    },\n\n    getModel() {\n      console.log(\"getmodel\");\n\n      return { value: this.selected };\n    },\n\n    setModel(model) {\n      console.log(\"setmodel\");\n      this.selected = model.value;\n    },\n  },\n};\n</script>\n<style></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ruleSetFilter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ruleSetFilter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ruleSetFilter.vue?vue&type=template&id=2e9d9b36&\"\nimport script from \"./ruleSetFilter.vue?vue&type=script&lang=js&\"\nexport * from \"./ruleSetFilter.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VDataTable } from 'vuetify/lib/components/VDataTable';\ninstallComponents(component, {VDataTable})\n","\n/* eslint-disable no-unused-vars */\n\nconst cloudformationtemplate = {\n  AWSTemplateFormatVersion: \"2010-09-09\",\n  Description:\n    \"Auto generated sample AWS Config Rule Set \" + new Date().toISOString(),\n  Parameters: {\n    MaximumExecutionFrequency: {\n      Type: \"String\",\n      Default: \"TwentyFour_Hours\",\n      Description:\n        \"The default frequency that you want AWS Config to run evaluations for the rule.\",\n      MinLength: \"1\",\n      ConstraintDescription: \"This parameter is required.\",\n      AllowedValues: [\n        \"One_Hour\",\n        \"Three_Hours\",\n        \"Six_Hours\",\n        \"Twelve_Hours\",\n        \"TwentyFour_Hours\",\n      ],\n    },\n  },\n  Resources: {},\n};\n\nfunction cfinput(data, flip) {\n  console.log(\"got data\", data, flip);\n  if (flip) {\n    console.log(\"Working with Config Packs\");\n    addConfigPacks(data);\n  } else {\n    console.log(\"Working with Rules\");\n    addRules(data);\n  }\n}\n\nfunction addRules(data) {\n  console.log(data);\n  data = data.map((element) => element.data.NAME);\n  data = [...new Set(data)];\n  data.forEach((element) => {\n    console.log(\"got element\");\n    console.log(element);\n    ruleFactory(element);\n  });\n}\n\nfunction addConfigPacks(data) {\n  console.log(data);\n  printCloudformation();\n  data = data.map((element) => {\n    delete element.data.NAME;\n    delete element.data.TOTAL_RULES;\n    delete element.data.URL;\n    return Object.keys(element.data);\n  });\n  data = [].concat.apply([], data);\n  data = [...new Set(data)];\n  console.log(data);\n  data.forEach((element) => {\n    console.log(\"got element\");\n    console.log(element);\n    ruleFactory(element);\n  });\n}\n\nfunction printCloudformation() {\n  console.log(cloudformationtemplate);\n  console.log(JSON.stringify(cloudformationtemplate));\n}\n\nfunction ruleFactory(rule) {\n  //   let rule = configFactory[rule]();\n  cloudformationtemplate[\"Resources\"][\n    rule.replaceAll(\"_\", \"\").toLocaleLowerCase()\n  ] = configFactory[rule]();\n  printCloudformation();\n}\n\n// Config Rules Functions\n\nvar configFactory = {};\n\n// Generate Coded below\n\n\nconfigFactory.ACCESS_KEYS_ROTATED = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"maxAccessKeyAge\"] =\n    {\"Type\": \"String\", \"Default\": \"90\", \"Description\": \"Maximum number of days without rotation. Default 90.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"access-keys-rotated\",\n      Description: \"Checks whether the active access keys are rotated within the number of days specified in maxAccessKeyAge. The rule is non-compliant if the access keys have not been rotated for more than maxAccessKeyAge number of days.\",\n\n      InputParameters: {\"maxAccessKeyAge\": {\"Ref\": \"maxAccessKeyAge\"}},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ACCESS_KEYS_ROTATED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.ACCOUNT_PART_OF_ORGANIZATIONS = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"MasterAccountId\"] =\n    {\"Type\": \"String\", \"Default\": \"\", \"Description\": \"The master account ID for an AWS account.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"account-part-of-organizations\",\n      Description: \"Rule checks whether AWS account is part of AWS Organizations. The rule is NON_COMPLIANT if the AWS account is not part of AWS Organizations or AWS Organizations master account ID does not match rule parameter MasterAccountId.\",\n\n      InputParameters: {\"MasterAccountId\": {\"Ref\": \"MasterAccountId\"}},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ACCOUNT_PART_OF_ORGANIZATIONS\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.ACM_CERTIFICATE_EXPIRATION_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"daysToExpiration\"] =\n    {\"Type\": \"String\", \"Default\": \"14\", \"Description\": \"Specify the number of days before the rule flags the ACM Certificate as noncompliant.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"acm-certificate-expiration-check\",\n      Description: \"Checks whether ACM Certificates in your account are marked for expiration within the specified number of days. Certificates provided by ACM are automatically renewed. ACM does not automatically renew certificates that you import.\",\n\n      InputParameters: {\"daysToExpiration\": {\"Ref\": \"daysToExpiration\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ACM::Certificate\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ACM_CERTIFICATE_EXPIRATION_CHECK\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.ALB_HTTP_DROP_INVALID_HEADER_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alb-http-drop-invalid-header-enabled\",\n      Description: \"Checks if rule evaluates AWS Application Load Balancers (ALB) to ensure they are configured to drop http headers. The rule is NON_COMPLIANT if the value of routing.http.drop_invalid_header_fields.enabled is set to false.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticLoadBalancingV2::LoadBalancer\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ALB_HTTP_DROP_INVALID_HEADER_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALB_HTTP_TO_HTTPS_REDIRECTION_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alb-http-to-https-redirection-check\",\n      Description: \"Checks whether HTTP to HTTPS redirection is configured on all HTTP listeners of Application Load Balancers. The rule is NON_COMPLIANT if one or more HTTP listeners of Application Load Balancer do not have HTTP to HTTPS redirection configured.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ALB_HTTP_TO_HTTPS_REDIRECTION_CHECK\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.ALB_WAF_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alb-waf-enabled\",\n      Description: \"Checks if Web Application Firewall (WAF) is enabled on Application Load Balancers (ALBs). This rule is NON_COMPLIANT if key: waf.enabled is set to false.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticLoadBalancingV2::LoadBalancer\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ALB_WAF_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.API_GW_ASSOCIATED_WITH_WAF = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"api-gw-associated-with-waf\",\n      Description: \"Checks if an Amazon API Gateway API stage is using an AWS WAF Web ACL. This rule is NON_COMPLIANT if an AWS WAF Web ACL is not used or if a used AWS Web ACL does not match what is listed in the rule parameter.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ApiGateway::Stage\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"API_GW_ASSOCIATED_WITH_WAF\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.API_GW_CACHE_ENABLED_AND_ENCRYPTED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"api-gw-cache-enabled-and-encrypted\",\n      Description: \"Checks that all methods in Amazon API Gateway stages have cache enabled and cache encrypted. The rule is NON_COMPLIANT if any method in Amazon API Gateway stage is not configured to cache or the cache is not encrypted.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ApiGateway::Stage\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"API_GW_CACHE_ENABLED_AND_ENCRYPTED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.API_GW_ENDPOINT_TYPE_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"endpointConfigurationTypes\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma-separated list of allowed endpointConfigurationTypes. Allowed values are REGIONAL, PRIVATE and EDGE.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"api-gw-endpoint-type-check\",\n      Description: \"Checks that Amazon API Gateway APIs are of type as specified in the rule parameter 'endpointConfigurationTypes'. The rule returns COMPLIANT if any of the RestApi endpoint types matches the endpointConfigurationTypes configured in the rule parameter.\",\n\n      InputParameters: {\"endpointConfigurationTypes\": {\"Ref\": \"endpointConfigurationTypes\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ApiGateway::RestApi\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"API_GW_ENDPOINT_TYPE_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.API_GW_EXECUTION_LOGGING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"api-gw-execution-logging-enabled\",\n      Description: \"Checks that all methods in Amazon API Gateway stage has logging enabled. The rule is NON_COMPLIANT if logging is not enabled. The rule is NON_COMPLIANT if loggingLevel is neither ERROR nor INFO.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ApiGateway::Stage\", \"AWS::ApiGatewayV2::Stage\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"API_GW_EXECUTION_LOGGING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.API_GW_SSL_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"api-gw-ssl-enabled\",\n      Description: \"Checks if a REST API stage uses an Secure Sockets Layer (SSL) certificate. This rule is NON_COMPLIANT if the REST API stage does not have an associated SSL certificate.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ApiGateway::Stage\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"API_GW_SSL_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.API_GW_XRAY_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"api-gw-xray-enabled\",\n      Description: \"Checks if AWS X-Ray tracing is enabled on Amazon API Gateway REST APIs. The rule is COMPLIANT if X-Ray tracing is enabled and NON_COMPLIANT otherwise.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ApiGateway::Stage\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"API_GW_XRAY_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.APPROVED_AMIS_BY_ID = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"amiIds\"] =\n    {\"Type\": \"String\", \"Description\": \"Specify AMI IDs (comma separated list of up to 10).\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"approved-amis-by-id\",\n      Description: \"Checks whether running instances are using specified AMIs.\",\n\n      InputParameters: {\"amiIds\": {\"Ref\": \"amiIds\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"APPROVED_AMIS_BY_ID\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.APPROVED_AMIS_BY_TAG = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"amisByTagKeyAndValue\"] =\n    {\"Type\": \"String\", \"Default\": \"tag-key:tag-value,other-tag-key\", \"Description\": \"Specify AMIs by tag (comma separated list up to 10; for example, 'tag-key:tag-value').\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"approved-amis-by-tag\",\n      Description: \"Checks whether running instances are using specified AMIs.\",\n\n      InputParameters: {\"amisByTagKeyAndValue\": {\"Ref\": \"amisByTagKeyAndValue\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"APPROVED_AMIS_BY_TAG\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.AURORA_MYSQL_BACKTRACKING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"aurora-mysql-backtracking-enabled\",\n      Description: \"Checks if an Amazon Aurora MySQL cluster has backtracking enabled. This rule is NON_COMPLIANT if the Aurora cluster uses MySQL and it does not have backtracking enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBCluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AURORA_MYSQL_BACKTRACKING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.AURORA_RESOURCES_PROTECTED_BY_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"aurora-resources-protected-by-backup-plan\",\n      Description: \"Checks if Amazon Aurora DB clusters are protected by a backup plan. The rule is NON_COMPLIANT if the Amazon Relational Database Service (Amazon RDS) Database Cluster is not protected by a backup plan.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBCluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AURORA_RESOURCES_PROTECTED_BY_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.AUTOSCALING_GROUP_ELB_HEALTHCHECK_REQUIRED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"autoscaling-group-elb-healthcheck-required\",\n      Description: \"Checks whether your Auto Scaling groups that are associated with a load balancer are using Elastic Load Balancing health checks.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::AutoScaling::AutoScalingGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AUTOSCALING_GROUP_ELB_HEALTHCHECK_REQUIRED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"autoscaling-launch-config-public-ip-disabled\",\n      Description: \"Checks if Amazon EC2 Auto Scaling groups have public IP addresses enabled through Launch Configurations. This rule is NON_COMPLIANT if the Launch Configuration for an Auto Scaling group has AssociatePublicIpAddress set to 'true'.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::AutoScaling::LaunchConfiguration\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AUTOSCALING_LAUNCH_CONFIG_PUBLIC_IP_DISABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.AUTOSCALING_MULTIPLE_AZ = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"autoscaling-multiple-az\",\n      Description: \"Checks if the Auto Scaling group spans multiple Availability Zones. The rule is NON_COMPLIANT if the Auto Scaling group does not span multiple Availability Zones.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::AutoScaling::AutoScalingGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AUTOSCALING_MULTIPLE_AZ\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.BACKUP_PLAN_MIN_FREQUENCY_AND_MIN_RETENTION_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"backup-plan-min-frequency-and-min-retention-check\",\n      Description: \"Checks if a backup plan has a backup rule that satisfies the required frequency and retention period. The rule is NON_COMPLIANT if recovery points are not created at least as often as the specified frequency or expire before the specified period.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Backup::BackupPlan\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"BACKUP_PLAN_MIN_FREQUENCY_AND_MIN_RETENTION_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.BACKUP_RECOVERY_POINT_ENCRYPTED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"backup-recovery-point-encrypted\",\n      Description: \"Checks if a recovery point is encrypted. The rule is NON_COMPLIANT if the recovery point is not encrypted.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Backup::RecoveryPoint\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"BACKUP_RECOVERY_POINT_ENCRYPTED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.BACKUP_RECOVERY_POINT_MANUAL_DELETION_DISABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"backup-recovery-point-manual-deletion-disabled\",\n      Description: \"Checks if a backup vault has an attached resource-based policy which prevents deletion of recovery points. The rule is NON_COMPLIANT if the Backup Vault does not have resource-based policies or has policies without a suitable 'Deny' statement.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Backup::BackupVault\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"BACKUP_RECOVERY_POINT_MANUAL_DELETION_DISABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.BACKUP_RECOVERY_POINT_MINIMUM_RETENTION_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"backup-recovery-point-minimum-retention-check\",\n      Description: \"Checks if a recovery point expires no earlier than after the specified period. The rule is NON_COMPLIANT if the recovery point has a retention point that is less than the required retention period.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Backup::RecoveryPoint\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"BACKUP_RECOVERY_POINT_MINIMUM_RETENTION_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.BEANSTALK_ENHANCED_HEALTH_REPORTING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"beanstalk-enhanced-health-reporting-enabled\",\n      Description: \"checks for Elastic Beanstalk environment is configured for 'enhanced' health reporting and NON_COMPLIANT if configured for 'basic' health reporting\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticBeanstalk::Environment\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"BEANSTALK_ENHANCED_HEALTH_REPORTING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLB_MULTIPLE_AZ = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"clb-multiple-az\",\n      Description: \"Checks if a Classic Load Balancer spans multiple Availability Zones (AZs). The rule is NON_COMPLIANT if a Classic Load Balancer spans less than 2 AZs or does not span number of AZs mentioned in the minAvailabilityZones parameter (if provided).\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticLoadBalancing::LoadBalancer\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLB_MULTIPLE_AZ\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDFORMATION_STACK_DRIFT_DETECTION_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"cloudformationRoleArn\"] =\n    {\"Type\": \"String\", \"Description\": \"The AWS CloudFormation role ARN with IAM policy permissions to detect drift for AWS CloudFormation Stacks\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudformation-stack-drift-detection-check\",\n      Description: \"Checks whether your CloudFormation stacks' actual configuration differs, or has drifted, from its expected configuration.\",\n\n      InputParameters: {\"cloudformationRoleArn\": {\"Ref\": \"cloudformationRoleArn\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFormation::Stack\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFORMATION_STACK_DRIFT_DETECTION_CHECK\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.CLOUDFORMATION_STACK_NOTIFICATION_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudformation-stack-notification-check\",\n      Description: \"Checks whether your CloudFormation stacks are sending event notifications to an SNS topic. Optionally checks whether specified SNS topics are used.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFormation::Stack\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFORMATION_STACK_NOTIFICATION_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDFRONT_ACCESSLOGS_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudfront-accesslogs-enabled\",\n      Description: \"Checks if Amazon CloudFront distributions are configured to capture information from Amazon Simple Storage Service (Amazon S3) server access logs. This rule is NON_COMPLIANT if a CloudFront distribution does not have logging configured.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFRONT_ACCESSLOGS_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDFRONT_ASSOCIATED_WITH_WAF = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudfront-associated-with-waf\",\n      Description: \"Checks if Amazon CloudFront distributions are associated with either WAF or WAFv2 web access control lists (ACLs). This rule is NON_COMPLIANT if a CloudFront distribution is not associated with a web ACL.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFRONT_ASSOCIATED_WITH_WAF\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDFRONT_CUSTOM_SSL_CERTIFICATE = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudfront-custom-ssl-certificate\",\n      Description: \"Checks if the certificate associated with an Amazon CloudFront distribution is the default Secure Sockets Layer (SSL) certificate. This rule is NON_COMPLIANT if a CloudFront distribution uses the default SSL certificate.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFRONT_CUSTOM_SSL_CERTIFICATE\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDFRONT_DEFAULT_ROOT_OBJECT_CONFIGURED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudfront-default-root-object-configured\",\n      Description: \"Checks if an Amazon CloudFront distribution is configured to return a specific object that is the default root object. The rule is NON_COMPLIANT if Amazon CloudFront distribution does not have a default root object configured.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFRONT_DEFAULT_ROOT_OBJECT_CONFIGURED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDFRONT_NO_DEPRECATED_SSL_PROTOCOLS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudfront-no-deprecated-ssl-protocols\",\n      Description: \"Checks if CloudFront distributions are using deprecated SSL protocols for HTTPS communication between CloudFront edge locations and custom origins. This rule is NON_COMPLIANT for a CloudFront distribution if any âOriginSslProtocolsâ includes âSSLv3â.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFRONT_NO_DEPRECATED_SSL_PROTOCOLS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDFRONT_ORIGIN_ACCESS_IDENTITY_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudfront-origin-access-identity-enabled\",\n      Description: \"Checks that Amazon CloudFront distribution with S3 Origin type has Origin Access Identity (OAI) configured. This rule is NON_COMPLIANT if the CloudFront distribution is backed by S3 and any of S3 Origin type is not OAI configured.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFRONT_ORIGIN_ACCESS_IDENTITY_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDFRONT_ORIGIN_FAILOVER_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudfront-origin-failover-enabled\",\n      Description: \"Checks whether an origin group is configured for the distribution of at least 2 origins in the origin group for Amazon CloudFront. This rule is NON_COMPLIANT if there are no origin groups for the distribution.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFRONT_ORIGIN_FAILOVER_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDFRONT_SNI_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudfront-sni-enabled\",\n      Description: \"Checks if Amazon CloudFront distributions are using a custom SSL certificate and are configured to use SNI to serve HTTPS requests. This rule is NON_COMPLIANT if a custom SSL certificate is associated but the SSL support method is a dedicated IP address.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFRONT_SNI_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDFRONT_TRAFFIC_TO_ORIGIN_ENCRYPTED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudfront-traffic-to-origin-encrypted\",\n      Description: \"Checks if Amazon CloudFront distributions are encrypting traffic to custom origins. The rule is NON_COMPLIANT if âOriginProtocolPolicyâ is âhttp-onlyâ or if âOriginProtocolPolicyâ is âmatch-viewerâ and âViewerProtocolPolicyâ is âallow-allâ.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFRONT_TRAFFIC_TO_ORIGIN_ENCRYPTED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDFRONT_VIEWER_POLICY_HTTPS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudfront-viewer-policy-https\",\n      Description: \"Checks whether your Amazon CloudFront distributions use HTTPS (directly or via a redirection). The rule is NON_COMPLIANT if the value of ViewerProtocolPolicy is set to 'allow-all' for the defaultCacheBehavior or for the cacheBehaviors.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDFRONT_VIEWER_POLICY_HTTPS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDTRAIL_S3_DATAEVENTS_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudtrail-s3-dataevents-enabled\",\n      Description: \"Checks whether at least one AWS CloudTrail trail is logging Amazon S3 data events for all S3 buckets. The rule is NON_COMPLIANT if trails log data events for S3 buckets is not configured.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDTRAIL_S3_DATAEVENTS_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.CLOUDTRAIL_SECURITY_TRAIL_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudtrail-security-trail-enabled\",\n      Description: \"Checks that there is at least one AWS CloudTrail trail defined with security best practices.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDTRAIL_SECURITY_TRAIL_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.CLOUDWATCH_ALARM_ACTION_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"alarmActionRequired\"] =\n    {\"Type\": \"String\", \"Default\": \"true\", \"Description\": \"Alarms have at least one action.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n      cloudformationtemplate[\"Parameters\"][\"insufficientDataActionRequired\"] =\n    {\"Type\": \"String\", \"Default\": \"true\", \"Description\": \"Alarms have at least one action when the alarm transitions to the INSUFFICIENT_DATA state from any other state.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n      cloudformationtemplate[\"Parameters\"][\"okActionRequired\"] =\n    {\"Type\": \"String\", \"Default\": \"false\", \"Description\": \"Alarms have at least one action when the alarm transitions to an OK state from any other state.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudwatch-alarm-action-check\",\n      Description: \"Checks whether CloudWatch alarms have at least one alarm action, one INSUFFICIENT_DATA action, or one OK action enabled. Optionally, checks whether any of the actions matches one of the specified ARNs.\",\n\n      InputParameters: {\"alarmActionRequired\": {\"Ref\": \"alarmActionRequired\"}, \"insufficientDataActionRequired\": {\"Ref\": \"insufficientDataActionRequired\"}, \"okActionRequired\": {\"Ref\": \"okActionRequired\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudWatch::Alarm\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDWATCH_ALARM_ACTION_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDWATCH_ALARM_ACTION_ENABLED_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudwatch-alarm-action-enabled-check\",\n      Description: \"Checks if Amazon CloudWatch alarms actions are in enabled state. The rule is NON_COMPLIANT if the CloudWatch alarms actions are not in enabled state.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudWatch::Alarm\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDWATCH_ALARM_ACTION_ENABLED_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDWATCH_ALARM_RESOURCE_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"resourceType\"] =\n    {\"Type\": \"String\", \"Description\": \"AWS resource type. The value can be one of the following: AWS::EC2::Volume, AWS::EC2::Instance, AWS::RDS::DBCluster, or AWS::S3::Bucket.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n      cloudformationtemplate[\"Parameters\"][\"metricName\"] =\n    {\"Type\": \"String\", \"Description\": \"The name for the metric associated with the alarm (for example, 'CPUUtilization' for EC2 instances).\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudwatch-alarm-resource-check\",\n      Description: \"Checks whether the specified resource type has a CloudWatch alarm for the specified metric. For resource type, you can specify EBS volumes, EC2 instances, RDS clusters, or S3 buckets.\",\n\n      InputParameters: {\"resourceType\": {\"Ref\": \"resourceType\"}, \"metricName\": {\"Ref\": \"metricName\"}},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDWATCH_ALARM_RESOURCE_CHECK\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.CLOUDWATCH_ALARM_SETTINGS_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"metricName\"] =\n    {\"Type\": \"String\", \"Description\": \"The name for the metric associated with the alarm.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudwatch-alarm-settings-check\",\n      Description: \"Checks whether CloudWatch alarms with the given metric name have the specified settings.\",\n\n      InputParameters: {\"metricName\": {\"Ref\": \"metricName\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudWatch::Alarm\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDWATCH_ALARM_SETTINGS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CLOUDWATCH_LOG_GROUP_ENCRYPTED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudwatch-log-group-encrypted\",\n      Description: \"Checks whether a log group in Amazon CloudWatch Logs is encrypted. The rule is NON_COMPLIANT if CloudWatch Logs has log group without encryption enabled.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUDWATCH_LOG_GROUP_ENCRYPTED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloud-trail-cloud-watch-logs-enabled\",\n      Description: \"Checks whether AWS CloudTrail trails are configured to send logs to Amazon CloudWatch logs. The trail is non-compliant if the CloudWatchLogsLogGroupArn property of the trail is empty.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUD_TRAIL_CLOUD_WATCH_LOGS_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.CLOUD_TRAIL_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloudtrail-enabled\",\n      Description: \"Checks whether AWS CloudTrail is enabled in your AWS account.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUD_TRAIL_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.CLOUD_TRAIL_ENCRYPTION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloud-trail-encryption-enabled\",\n      Description: \"Checks whether AWS CloudTrail is configured to use the server side encryption (SSE) AWS Key Management Service (AWS KMS) customer master key (CMK) encryption. The rule is compliant if the KmsKeyId is defined.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUD_TRAIL_ENCRYPTION_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cloud-trail-log-file-validation-enabled\",\n      Description: \"Checks whether AWS CloudTrail creates a signed digest file with logs. AWS recommends that the file validation must be enabled on all trails. The rule is noncompliant if the validation is not enabled.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CLOUD_TRAIL_LOG_FILE_VALIDATION_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.CMK_BACKING_KEY_ROTATION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cmk-backing-key-rotation-enabled\",\n      Description: \"Checks that key rotation is enabled for each key and matches to the key ID of the customer created customer master key (CMK). The rule is compliant, if the key rotation is enabled for specific key object.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CMK_BACKING_KEY_ROTATION_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.CODEBUILD_PROJECT_ARTIFACT_ENCRYPTION = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"codebuild-project-artifact-encryption\",\n      Description: \"Checks if an AWS CodeBuild project has encryption enabled for all of its artifacts. The rule is NON_COMPLIANT if âencryptionDisabledâ is set to âtrueâ for any primary or secondary (if present) artifact configurations.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CodeBuild::Project\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CODEBUILD_PROJECT_ARTIFACT_ENCRYPTION\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CODEBUILD_PROJECT_ENVIRONMENT_PRIVILEGED_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"codebuild-project-environment-privileged-check\",\n      Description: \"Checks if an AWS CodeBuild project environment has privileged mode enabled. The rule is NON_COMPLIANT for a CodeBuild project if âprivilegedModeâ is set to âtrueâ.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CodeBuild::Project\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CODEBUILD_PROJECT_ENVIRONMENT_PRIVILEGED_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"codebuild-project-envvar-awscred-check\",\n      Description: \"Checks whether the project contains environment variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY. The rule is NON_COMPLIANT when the project environment variables contains plaintext credentials.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CodeBuild::Project\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CODEBUILD_PROJECT_ENVVAR_AWSCRED_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CODEBUILD_PROJECT_LOGGING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"codebuild-project-logging-enabled\",\n      Description: \"Checks if an AWS CodeBuild project environment has at least one log option enabled. The rule is NON_COMPLIANT if 'logsConfig' is not present or the status of all present log configurations is set to 'DISABLED'.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CodeBuild::Project\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CODEBUILD_PROJECT_LOGGING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CODEBUILD_PROJECT_S3_LOGS_ENCRYPTED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"codebuild-project-s3-logs-encrypted\",\n      Description: \"Checks if a AWS CodeBuild project configured with Amazon S3 Logs has encryption enabled for its logs. The rule is NON_COMPLIANT if âencryptionDisabledâ is set to âtrueâ in a S3LogsConfig of a CodeBuild project.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CodeBuild::Project\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CODEBUILD_PROJECT_S3_LOGS_ENCRYPTED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CODEBUILD_PROJECT_SOURCE_REPO_URL_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"codebuild-project-source-repo-url-check\",\n      Description: \"Checks whether the GitHub or Bitbucket source repository URL contains either personal access tokens or user name and password. The rule is complaint with the usage of OAuth to grant authorization for accessing GitHub or Bitbucket repositories.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CodeBuild::Project\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CODEBUILD_PROJECT_SOURCE_REPO_URL_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CODEDEPLOY_AUTO_ROLLBACK_MONITOR_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"codedeploy-auto-rollback-monitor-enabled\",\n      Description: \"Checks if the deployment group is configured with automatic deployment rollback and deployment monitoring with alarms attached. The rule is NON_COMPLIANT if AutoRollbackConfiguration or AlarmConfiguration has not been configured or is not enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CodeDeploy::DeploymentGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CODEDEPLOY_AUTO_ROLLBACK_MONITOR_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CODEDEPLOY_EC2_MINIMUM_HEALTHY_HOSTS_CONFIGURED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"codedeploy-ec2-minimum-healthy-hosts-configured\",\n      Description: \"Checks if the deployment group for EC2/On-Premises Compute Platform is configured with a minimum healthy hosts fleet percentage or host count greater than or equal to the input threshold. The rule is NON_COMPLIANT if either is below the threshold.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CodeDeploy::DeploymentGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CODEDEPLOY_EC2_MINIMUM_HEALTHY_HOSTS_CONFIGURED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CODEDEPLOY_LAMBDA_ALLATONCE_TRAFFIC_SHIFT_DISABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"codedeploy-lambda-allatonce-traffic-shift-disabled\",\n      Description: \"Checks if the deployment group for Lambda Compute Platform is not using the default deployment configuration. The rule is NON_COMPLIANT if the deployment group is using the deployment configuration 'CodeDeployDefault.LambdaAllAtOnce'.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CodeDeploy::DeploymentGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CODEDEPLOY_LAMBDA_ALLATONCE_TRAFFIC_SHIFT_DISABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CODEPIPELINE_DEPLOYMENT_COUNT_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"codepipeline-deployment-count-check\",\n      Description: \"Checks whether the first deployment stage of the AWS Codepipeline performs more than one deployment. Optionally checks if each of the subsequent remaining stages deploy to more than the specified number of deployments (deploymentLimit).\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CodePipeline::Pipeline\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CODEPIPELINE_DEPLOYMENT_COUNT_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CODEPIPELINE_REGION_FANOUT_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"codepipeline-region-fanout-check\",\n      Description: \"Checks whether each stage in the AWS CodePipeline deploys to more regions than N times the number of regions the pipeline has deployed to in all previous stages, where N is regionFanoutFactor. The first deployment stage can deploy to only one region.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CodePipeline::Pipeline\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CODEPIPELINE_REGION_FANOUT_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CW_LOGGROUP_RETENTION_PERIOD_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"cw-loggroup-retention-period-check\",\n      Description: \"Checks whether Amazon CloudWatch LogGroup retention period is set to specific number of days. The rule is NON_COMPLIANT if the retention period is not set or is less than the configured retention period.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"CW_LOGGROUP_RETENTION_PERIOD_CHECK\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.DAX_ENCRYPTION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"dax-encryption-enabled\",\n      Description: \"Checks that Amazon DynamoDB Accelerator (DAX) clusters are encrypted. The rule is NON_COMPLIANT if a DAX cluster is not encrypted\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DAX_ENCRYPTION_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.DB_INSTANCE_BACKUP_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"db-instance-backup-enabled\",\n      Description: \"Checks whether RDS DB instances have backups enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBInstance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DB_INSTANCE_BACKUP_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.DESIRED_INSTANCE_TENANCY = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"tenancy\"] =\n    {\"Type\": \"String\", \"Description\": \"Desired tenancy of the instances. Valid values are DEDICATED, HOST and DEFAULT.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"desired-instance-tenancy\",\n      Description: \"Checks instances for specified tenancy.\",\n\n      InputParameters: {\"tenancy\": {\"Ref\": \"tenancy\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DESIRED_INSTANCE_TENANCY\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.DESIRED_INSTANCE_TYPE = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"instanceType\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma separated list of EC2 instance types (for example, 't2.small, m4.large').\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"desired-instance-type\",\n      Description: \"Checks whether your EC2 instances are of the specified instance types.\",\n\n      InputParameters: {\"instanceType\": {\"Ref\": \"instanceType\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DESIRED_INSTANCE_TYPE\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.DMS_REPLICATION_NOT_PUBLIC = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"dms-replication-not-public\",\n      Description: \"Checks whether AWS Database Migration Service replication instances are public. The rule is NON_COMPLIANT if PubliclyAccessible field is True.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DMS_REPLICATION_NOT_PUBLIC\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.DYNAMODB_AUTOSCALING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"dynamodb-autoscaling-enabled\",\n      Description: \"This rule checks whether Auto Scaling is enabled on your DynamoDB tables. Optionally you can set the read and write capacity units for the table.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::DynamoDB::Table\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DYNAMODB_AUTOSCALING_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.DYNAMODB_IN_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"dynamodb-in-backup-plan\",\n      Description: \"Checks whether Amazon DynamoDB table is present in AWS Backup Plans. The rule is NON_COMPLIANT if Amazon DynamoDB tables are not present in any AWS Backup plan.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DYNAMODB_IN_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.DYNAMODB_PITR_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"dynamodb-pitr-enabled\",\n      Description: \"Check that point in time recovery is enabled for Amazon DynamoDB tables.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::DynamoDB::Table\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DYNAMODB_PITR_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.DYNAMODB_RESOURCES_PROTECTED_BY_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"dynamodb-resources-protected-by-backup-plan\",\n      Description: \"Checks if Amazon DynamoDB tables are protected by a backup plan. The rule is NON_COMPLIANT if the DynamoDB Table is not covered by a backup plan.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::DynamoDB::Table\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DYNAMODB_RESOURCES_PROTECTED_BY_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.DYNAMODB_TABLE_ENCRYPTED_KMS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"dynamodb-table-encrypted-kms\",\n      Description: \"Checks whether Amazon DynamoDB table is encrypted with AWS Key Management Service (KMS). The rule is NON_COMPLIANT if Amazon DynamoDB table is not encrypted with AWS KMS.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::DynamoDB::Table\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DYNAMODB_TABLE_ENCRYPTED_KMS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.DYNAMODB_TABLE_ENCRYPTION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"dynamodb-table-encryption-enabled\",\n      Description: \"Checks whether the Amazon DynamoDB tables are encrypted and checks their status. The rule is compliant if the status is enabled or enabling.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::DynamoDB::Table\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DYNAMODB_TABLE_ENCRYPTION_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.DYNAMODB_THROUGHPUT_LIMIT_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"dynamodb-throughput-limit-check\",\n      Description: \"Checks whether provisioned DynamoDB throughput is approaching the maximum limit for your account.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"DYNAMODB_THROUGHPUT_LIMIT_CHECK\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EBS_IN_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ebs-in-backup-plan\",\n      Description: \"Check if Amazon Elastic Block Store (Amazon EBS) volumes are added in backup plans of AWS Backup. The rule is NON_COMPLIANT if Amazon EBS volumes are not included in backup plans.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EBS_IN_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EBS_OPTIMIZED_INSTANCE = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ebs-optimized-instance\",\n      Description: \"Checks whether EBS optimization is enabled for your EC2 instances that can be EBS-optimized.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EBS_OPTIMIZED_INSTANCE\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EBS_RESOURCES_PROTECTED_BY_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ebs-resources-protected-by-backup-plan\",\n      Description: \"Checks if Amazon Elastic Block Store (Amazon EBS) volumes are protected by a backup plan. The rule is NON_COMPLIANT if the Amazon EBS volume is not covered by a backup plan.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Volume\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EBS_RESOURCES_PROTECTED_BY_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ebs-snapshot-public-restorable-check\",\n      Description: \"Checks whether Amazon Elastic Block Store (Amazon EBS) snapshots are not publicly restorable. The rule is NON_COMPLIANT if one or more snapshots with RestorableByUserIds field are set to all, that is, Amazon EBS snapshots are public.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EBS_SNAPSHOT_PUBLIC_RESTORABLE_CHECK\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EC2_EBS_ENCRYPTION_BY_DEFAULT = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-ebs-encryption-by-default\",\n      Description: \"Check that Amazon Elastic Block Store (EBS) encryption is enabled by default. The rule is NON_COMPLIANT if the encryption is not enabled.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_EBS_ENCRYPTION_BY_DEFAULT\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EC2_IMDSV2_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-imdsv2-check\",\n      Description: \"Checks whether your Amazon Elastic Compute Cloud (Amazon EC2) instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2). The rule is NON_COMPLIANT if the HttpTokens is set to optional.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_IMDSV2_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_INSTANCE_DETAILED_MONITORING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-instance-detailed-monitoring-enabled\",\n      Description: \"Checks whether detailed monitoring is enabled for EC2 instances.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_INSTANCE_DETAILED_MONITORING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_INSTANCE_MANAGED_BY_SSM = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-instance-managed-by-systems-manager\",\n      Description: \"Checks whether the Amazon EC2 instances in your account are managed by AWS Systems Manager.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\", \"AWS::SSM::ManagedInstanceInventory\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_INSTANCE_MANAGED_BY_SSM\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_INSTANCE_MULTIPLE_ENI_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-instance-multiple-eni-check\",\n      Description: \"Checks if Amazon Elastic Compute Cloud (Amazon EC2) uses multiple ENIs (Elastic Network Interfaces) or Elastic Fabric Adapters (EFAs). This rule is NON_COMPLIANT an Amazon EC2 instance use multiple network interfaces.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_INSTANCE_MULTIPLE_ENI_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_INSTANCE_NO_PUBLIC_IP = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-instance-no-public-ip\",\n      Description: \"Checks whether Amazon Elastic Compute Cloud (Amazon EC2) instances have a public IP association. The rule is NON_COMPLIANT if the publicIp field is present in the Amazon EC2 instance configuration item. This rule applies only to IPv4.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_INSTANCE_NO_PUBLIC_IP\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_INSTANCE_PROFILE_ATTACHED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-instance-profile-attached\",\n      Description: \"Checks if an Amazon Elastic Compute Cloud (Amazon EC2) instance has an Identity and Access Management (IAM) profile attached to it. This rule is NON_COMPLIANT if no IAM profile is attached to the Amazon EC2 instance.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_INSTANCE_PROFILE_ATTACHED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_MANAGEDINSTANCE_APPLICATIONS_BLACKLISTED = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"applicationNames\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma-separated list of application names. Optionally, specify versions appended with ':' (for example, 'Chrome:0.5.3, Firefox').\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-managedinstance-applications-blacklisted\",\n      Description: \"Checks that none of the specified applications are installed on the instance. Optionally, specify the version. Newer versions will not be blacklisted. Optionally, specify the platform to apply the rule only to instances running that platform.\",\n\n      InputParameters: {\"applicationNames\": {\"Ref\": \"applicationNames\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::SSM::ManagedInstanceInventory\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_MANAGEDINSTANCE_APPLICATIONS_BLACKLISTED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_MANAGEDINSTANCE_APPLICATIONS_REQUIRED = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"applicationNames\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma-separated list of application names. Optionally, specify versions appended with ':' (for example, 'Chrome:0.5.3, Firefox').\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-managedinstance-applications-required\",\n      Description: \"Checks whether all of the specified applications are installed on the instance. Optionally, specify the minimum acceptable version. Optionally, specify the platform to apply the rule only to instances running that platform.\",\n\n      InputParameters: {\"applicationNames\": {\"Ref\": \"applicationNames\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::SSM::ManagedInstanceInventory\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_MANAGEDINSTANCE_APPLICATIONS_REQUIRED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-managedinstance-association-compliance-status-check\",\n      Description: \"Checks whether the compliance status of the AWS Systems Manager association compliance is COMPLIANT or NON_COMPLIANT after the association execution on the instance. The rule is compliant if the field status is COMPLIANT.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::SSM::AssociationCompliance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_MANAGEDINSTANCE_ASSOCIATION_COMPLIANCE_STATUS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_MANAGEDINSTANCE_INVENTORY_BLACKLISTED = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"inventoryNames\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma separated list of Systems Manager inventory types (for example, 'AWS:Network, AWS:WindowsUpdate').\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-managedinstance-inventory-blacklisted\",\n      Description: \"Checks whether instances managed by Amazon EC2 Systems Manager are configured to collect blacklisted inventory types.\",\n\n      InputParameters: {\"inventoryNames\": {\"Ref\": \"inventoryNames\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::SSM::ManagedInstanceInventory\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_MANAGEDINSTANCE_INVENTORY_BLACKLISTED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_MANAGEDINSTANCE_PATCH_COMPLIANCE_STATUS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-managedinstance-patch-compliance-status-check\",\n      Description: \"Checks whether the compliance status of the AWS Systems Manager patch compliance is COMPLIANT or NON_COMPLIANT after the patch installation on the instance. The rule is compliant if the field status is COMPLIANT.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::SSM::PatchCompliance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_MANAGEDINSTANCE_PATCH_COMPLIANCE_STATUS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_MANAGEDINSTANCE_PLATFORM_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"platformType\"] =\n    {\"Type\": \"String\", \"Description\": \"Platform type (for example, 'Linux').\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-managedinstance-platform-check\",\n      Description: \"Checks whether EC2 managed instances have the desired configurations.\",\n\n      InputParameters: {\"platformType\": {\"Ref\": \"platformType\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::SSM::ManagedInstanceInventory\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_MANAGEDINSTANCE_PLATFORM_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_NO_AMAZON_KEY_PAIR = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-no-amazon-key-pair\",\n      Description: \"Checks if running Amazon Elastic Compute Cloud (EC2) instances are launched using amazon key pairs. The rule is NON_COMPLIANT if a running EC2 instance is launched with a key pair.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_NO_AMAZON_KEY_PAIR\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_PARAVIRTUAL_INSTANCE_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-paravirtual-instance-check\",\n      Description: \"Checks if the virtualization type of an EC2 instance is paravirtual. This rule is NON_COMPLIANT for an EC2 instance if 'virtualizationType' is set to 'paravirtual'.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_PARAVIRTUAL_INSTANCE_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_RESOURCES_PROTECTED_BY_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-resources-protected-by-backup-plan\",\n      Description: \"Checks if Amazon Elastic Compute Cloud (Amazon EC2) instances are protected by a backup plan. The rule is NON_COMPLIANT if the Amazon EC2 instance is not covered by a backup plan.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_RESOURCES_PROTECTED_BY_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EC2_SECURITY_GROUP_ATTACHED_TO_ENI = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-security-group-attached-to-eni\",\n      Description: \"Checks that non-default security groups are attached to Amazon Elastic Compute Cloud (EC2) instances or an elastic network interfaces (ENIs). The rule returns NON_COMPLIANT if the security group is not associated with an EC2 instance or an ENI. \",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::SecurityGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_SECURITY_GROUP_ATTACHED_TO_ENI\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_SECURITY_GROUP_ATTACHED_TO_ENI_PERIODIC = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-security-group-attached-to-eni-periodic\",\n      Description: \"Checks if non-default security groups are attached to Elastic network interfaces (ENIs). The rule is NON_COMPLIANT if the security group is not associated with an elastic network interface (ENI).\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::SecurityGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_SECURITY_GROUP_ATTACHED_TO_ENI_PERIODIC\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EC2_STOPPED_INSTANCE = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-stopped-instance\",\n      Description: \"Checks whether there are instances stopped for more than the allowed number of days.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_STOPPED_INSTANCE\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EC2_TOKEN_HOP_LIMIT_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-token-hop-limit-check\",\n      Description: \"Checks if an Amazon Elastic Compute Cloud (EC2) instance metadata has a specified token hop limit that is below the desired limit. The rule is NON_COMPLIANT for an instance if it has a hop limit value above the intended limit.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_TOKEN_HOP_LIMIT_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_TRANSIT_GATEWAY_AUTO_VPC_ATTACH_DISABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-transit-gateway-auto-vpc-attach-disabled\",\n      Description: \"Checks if Amazon Elastic Compute Cloud (Amazon EC2) Transit Gateways have 'AutoAcceptSharedAttachments' enabled. The rule is NON_COMPLIANT for a Transit Gateway if 'AutoAcceptSharedAttachments' is set to 'enable'.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::TransitGateway\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_TRANSIT_GATEWAY_AUTO_VPC_ATTACH_DISABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_VOLUME_INUSE_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-volume-inuse-check\",\n      Description: \"Checks whether EBS volumes are attached to EC2 instances.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Volume\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EC2_VOLUME_INUSE_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ECR_PRIVATE_IMAGE_SCANNING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ecr-private-image-scanning-enabled\",\n      Description: \"Checks if a private Amazon Elastic Container Registry (ECR) repository has image scanning enabled. The rule is NON_COMPLIANT if image scanning is not enabled for the private ECR repository.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ECR::Repository\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ECR_PRIVATE_IMAGE_SCANNING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ECR_PRIVATE_LIFECYCLE_POLICY_CONFIGURED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ecr-private-lifecycle-policy-configured\",\n      Description: \"Checks if a private Amazon Elastic Container Registry (ECR) repository has at least one lifecycle policy configured. The rule is NON_COMPLIANT if no lifecycle policy is configured for the ECR private repository.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ECR::Repository\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ECR_PRIVATE_LIFECYCLE_POLICY_CONFIGURED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ECR_PRIVATE_TAG_IMMUTABILITY_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ecr-private-tag-immutability-enabled\",\n      Description: \"Checks if a private Amazon Elastic Container Registry (ECR) repository has tag immutability enabled. This rule is NON_COMPLIANT if tag immutability is not enabled for the private ECR repository.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ECR::Repository\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ECR_PRIVATE_TAG_IMMUTABILITY_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ECS_CONTAINERS_NONPRIVILEGED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ecs-containers-nonprivileged\",\n      Description: \"Checks if the privileged parameter in the container definition of ECSTaskDefinitions is set to âtrueâ. The rule is NON_COMPLIANT if the privileged parameter is âtrueâ.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ECS::TaskDefinition\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ECS_CONTAINERS_NONPRIVILEGED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ECS_CONTAINERS_READONLY_ACCESS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ecs-containers-readonly-access\",\n      Description: \"Checks if Amazon Elastic Container Service (Amazon ECS) Containers only have read-only access to its root filesystems. The rule is NON_COMPLIANT if the readonlyRootFilesystem parameter in the container definition of ECSTaskDefinitions is set to âfalseâ.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ECS::TaskDefinition\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ECS_CONTAINERS_READONLY_ACCESS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ECS_NO_ENVIRONMENT_SECRETS = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"secretKeys\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma-separated list of key names to search for in the environment variables of container definitions within Task Definitions. Extra spaces will be removed.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ecs-no-environment-secrets\",\n      Description: \"Checks if secrets are passed as container environment variables. The rule is NON_COMPLIANT if 1 or more environment variable key matches a key listed in the 'secretKeys' parameter (excluding environmental variables from other locations such as Amazon S3).\",\n\n      InputParameters: {\"secretKeys\": {\"Ref\": \"secretKeys\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ECS::TaskDefinition\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ECS_NO_ENVIRONMENT_SECRETS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ECS_TASK_DEFINITION_MEMORY_HARD_LIMIT = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ecs-task-definition-memory-hard-limit\",\n      Description: \"Checks if Amazon Elastic Container Service (ECS) task definitions have a set memory limit for its container definitions. The rule is NON_COMPLIANT for a task definition if the âmemoryâ parameter is absent for one container definition.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ECS::TaskDefinition\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ECS_TASK_DEFINITION_MEMORY_HARD_LIMIT\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ECS_TASK_DEFINITION_NONROOT_USER = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ecs-task-definition-nonroot-user\",\n      Description: \"Checks if ECSTaskDefinitions specify a user for Amazon Elastic Container Service (Amazon ECS) EC2 launch type containers to run on. The rule is NON_COMPLIANT if the âuserâ parameter is not present or set to ârootâ.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ECS::TaskDefinition\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ECS_TASK_DEFINITION_NONROOT_USER\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ECS_TASK_DEFINITION_PID_MODE_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ecs-task-definition-pid-mode-check\",\n      Description: \"Checks if ECSTaskDefinitions are configured to share a hostâs process namespace with its Amazon Elastic Container Service (Amazon ECS) containers. The rule is NON_COMPLIANT if the pidMode parameter is set to âhostâ.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ECS::TaskDefinition\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ECS_TASK_DEFINITION_PID_MODE_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ECS_TASK_DEFINITION_USER_FOR_HOST_MODE_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ecs-task-definition-user-for-host-mode-check\",\n      Description: \"Checks whether an Amazon ECS task definition with host networking mode has containers definitions regarding 'privileged' or 'user'. The rule is NON_COMPLIANT for task definitions with host network mode, privileged=false or empty and user= root or empty.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ECS::TaskDefinition\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ECS_TASK_DEFINITION_USER_FOR_HOST_MODE_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EFS_ACCESS_POINT_ENFORCE_ROOT_DIRECTORY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"efs-access-point-enforce-root-directory\",\n      Description: \"Checks if Amazon Elastic File System (Amazon EFS) access points are configured to enforce a root directory. The rule is NON_COMPLIANT if the value of 'Path' is set to '/' (default root directory of the file system).\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EFS::AccessPoint\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EFS_ACCESS_POINT_ENFORCE_ROOT_DIRECTORY\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EFS_ACCESS_POINT_ENFORCE_USER_IDENTITY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"efs-access-point-enforce-user-identity\",\n      Description: \"Checks if Amazon Elastic File System (Amazon EFS) access points are configured to enforce a user identity. The rule is NON_COMPLIANT if 'PosixUser' is not defined or if parameters are provided and there is no match in the corresponding parameter.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EFS::AccessPoint\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EFS_ACCESS_POINT_ENFORCE_USER_IDENTITY\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EFS_ENCRYPTED_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"efs-encrypted-check\",\n      Description: \"Checks whether Amazon EFS are configured to encrypt file data using AWS KMS. The rule is NON_COMPLIANT if the Encrypted key is set to False on DescribeFileSystems or, if specified, KmsKeyId key on DescribeFileSystems is not matching KmsKeyId parameter.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EFS_ENCRYPTED_CHECK\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EFS_IN_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"efs-in-backup-plan\",\n      Description: \"Checks whether Amazon Elastic File System (Amazon EFS) file systems are added in the backup plans of AWS Backup. The rule is NON_COMPLIANT if EFS file systems are not included in the backup plans.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EFS_IN_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EFS_RESOURCES_PROTECTED_BY_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"efs-resources-protected-by-backup-plan\",\n      Description: \"Checks if Amazon Elastic File System (Amazon EFS) File Systems are protected by a backup plan. The rule is NON_COMPLIANT if the EFS File System is not covered by a backup plan.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EFS::FileSystem\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EFS_RESOURCES_PROTECTED_BY_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EIP_ATTACHED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"eip-attached\",\n      Description: \"Checks whether all EIP addresses allocated to a VPC are attached to EC2 instances or in-use ENIs.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::EIP\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EIP_ATTACHED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EKS_CLUSTER_OLDEST_SUPPORTED_VERSION = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"oldestVersionSupported\"] =\n    {\"Type\": \"String\", \"Description\": \"Value of the oldest version of Kubernetes supported on AWS.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"eks-cluster-oldest-supported-version\",\n      Description: \"Checks if an Amazon Elastic Kubernetes Service (EKS) cluster is running the oldest supported version. The rule is NON_COMPLIANT if an EKS cluster is running oldest supported version (equal to the parameter 'oldestVersionSupported').\",\n\n      InputParameters: {\"oldestVersionSupported\": {\"Ref\": \"oldestVersionSupported\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EKS::Cluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EKS_CLUSTER_OLDEST_SUPPORTED_VERSION\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EKS_CLUSTER_SUPPORTED_VERSION = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"oldestVersionSupported\"] =\n    {\"Type\": \"String\", \"Description\": \"Value of the oldest version of Kubernetes supported on AWS.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"eks-cluster-supported-version\",\n      Description: \"Checks if an Amazon Elastic Kubernetes Service (EKS) cluster is running a supported Kubernetes version. This rule is NON_COMPLIANT if an EKS cluster is running an unsupported version (less than the parameter 'oldestVersionSupported').\",\n\n      InputParameters: {\"oldestVersionSupported\": {\"Ref\": \"oldestVersionSupported\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EKS::Cluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EKS_CLUSTER_SUPPORTED_VERSION\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EKS_ENDPOINT_NO_PUBLIC_ACCESS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"eks-endpoint-no-public-access\",\n      Description: \"Checks whether Amazon Elastic Kubernetes Service (Amazon EKS) endpoint is not publicly accessible. The rule is NON_COMPLIANT if the endpoint is publicly accessible.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EKS_ENDPOINT_NO_PUBLIC_ACCESS\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EKS_SECRETS_ENCRYPTED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"eks-secrets-encrypted\",\n      Description: \"Checks whether Amazon Elastic Kubernetes Service clusters are configured to have Kubernetes secrets encrypted using AWS Key Management Service (KMS) keys. This rule is NON_COMPLIANT if an EKS cluster does not have an encryptionConfig.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EKS_SECRETS_ENCRYPTED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elasticache-redis-cluster-automatic-backup-check\",\n      Description: \"The rule is NON_COMPLIANT if SnapshotRetentionLimit for Redis cluster is less than the SnapshotRetentionPeriod parameter, i.e from 0 to 15 as the default is 15.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELASTICACHE_REDIS_CLUSTER_AUTOMATIC_BACKUP_CHECK\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.ELASTICSEARCH_ENCRYPTED_AT_REST = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elasticsearch-encrypted-at-rest\",\n      Description: \"Checks whether Amazon OpenSearch Service domains have encryption at rest configuration enabled. The rule is NON_COMPLIANT if EncryptionAtRestOptions field is not enabled.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELASTICSEARCH_ENCRYPTED_AT_REST\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.ELASTICSEARCH_IN_VPC_ONLY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elasticsearch-in-vpc-only\",\n      Description: \"Checks whether Amazon OpenSearch Service domains are in Amazon Virtual Private Cloud (VPC). The rule is NON_COMPLIANT if ElasticSearch Service domain endpoint is public.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELASTICSEARCH_IN_VPC_ONLY\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.ELASTICSEARCH_LOGS_TO_CLOUDWATCH = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elasticsearch-logs-to-cloudwatch\",\n      Description: \"Checks if Amazon OpenSearch Service domains are configured to send logs to Amazon CloudWatch Logs. The rule is COMPLIANT if a log is enabled for an Amazon ES domain. This rule is NON_COMPLIANT if logging is not configured.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Elasticsearch::Domain\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELASTICSEARCH_LOGS_TO_CLOUDWATCH\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ELASTICSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elasticsearch-node-to-node-encryption-check\",\n      Description: \"Check that Amazon OpenSearch Service nodes are encrypted end to end. The rule is NON_COMPLIANT if the node-to-node encryption is disabled on the domain.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Elasticsearch::Domain\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELASTICSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ELASTIC_BEANSTALK_MANAGED_UPDATES_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elastic-beanstalk-managed-updates-enabled\",\n      Description: \"Checks if managed platform updates in an AWS Elastic Beanstalk environment is enabled. The rule is NON_COMPLIANT if the value for âManagedActionsEnabledâ is set to false or if a parameter is provided whose value does not match the existing configurations.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticBeanstalk::Environment\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELASTIC_BEANSTALK_MANAGED_UPDATES_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ELBV2_ACM_CERTIFICATE_REQUIRED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elbv2-acm-certificate-required\",\n      Description: \"Checks if Application Load Balancers and Network Load Balancers are configured to use certificates from Amazon Certificate Manager (ACM). This rule is NON_COMPLIANT if at least 1 load balancer is configured without a certificate from ACM.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELBV2_ACM_CERTIFICATE_REQUIRED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.ELBV2_MULTIPLE_AZ = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elbv2-multiple-az\",\n      Description: \"Checks if an Elastic Load Balancer V2 (Application, Network, or Gateway Load Balancer) has registered instances from multiple Availability Zones (AZ's). The rule is NON_COMPLIANT if an Elastic Load Balancer V2 has instances registered in less than 2 AZ's.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticLoadBalancingV2::LoadBalancer\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELBV2_MULTIPLE_AZ\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ELB_ACM_CERTIFICATE_REQUIRED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elb-acm-certificate-required\",\n      Description: \"This rule checks whether the Elastic Load Balancer(s) uses SSL certificates provided by AWS Certificate Manager. You must use an SSL or HTTPS listener with your Elastic Load Balancer to use this rule.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticLoadBalancing::LoadBalancer\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELB_ACM_CERTIFICATE_REQUIRED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ELB_CROSS_ZONE_LOAD_BALANCING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elb-cross-zone-load-balancing-enabled\",\n      Description: \"Checks if cross-zone load balancing is enabled for the Classic Load Balancers (CLBs). This rule is NON_COMPLIANT if cross-zone load balancing is not enabled for a CLB.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticLoadBalancing::LoadBalancer\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELB_CROSS_ZONE_LOAD_BALANCING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ELB_CUSTOM_SECURITY_POLICY_SSL_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"sslProtocolsAndCiphers\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma separated list of ciphers and protocols.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elb-custom-security-policy-ssl-check\",\n      Description: \"Checks whether your Classic Load Balancer SSL listeners are using a custom policy. The rule is only applicable if there are SSL listeners for the Classic Load Balancer.\",\n\n      InputParameters: {\"sslProtocolsAndCiphers\": {\"Ref\": \"sslProtocolsAndCiphers\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticLoadBalancing::LoadBalancer\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELB_CUSTOM_SECURITY_POLICY_SSL_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ELB_DELETION_PROTECTION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elb-deletion-protection-enabled\",\n      Description: \"Checks whether an Elastic Load Balancer has deletion protection enabled. The rule is NON_COMPLIANT if deletion_protection.enabled is false.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticLoadBalancingV2::LoadBalancer\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELB_DELETION_PROTECTION_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ELB_LOGGING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elb-logging-enabled\",\n      Description: \"Checks whether the Application Load Balancers and the Classic Load Balancers have logging enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticLoadBalancing::LoadBalancer\", \"AWS::ElasticLoadBalancingV2::LoadBalancer\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELB_LOGGING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ELB_PREDEFINED_SECURITY_POLICY_SSL_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"predefinedPolicyName\"] =\n    {\"Type\": \"String\", \"Description\": \"Name of the predefined policy.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elb-predefined-security-policy-ssl-check\",\n      Description: \"Checks whether your Classic Load Balancer SSL listeners are using a predefined policy. The rule is only applicable if there are SSL listeners for the Classic Load Balancer.\",\n\n      InputParameters: {\"predefinedPolicyName\": {\"Ref\": \"predefinedPolicyName\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticLoadBalancing::LoadBalancer\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELB_PREDEFINED_SECURITY_POLICY_SSL_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ELB_TLS_HTTPS_LISTENERS_ONLY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"elb-tls-https-listeners-only\",\n      Description: \"Checks whether your Classic Load Balancer's listeners are configured with SSL or HTTPS\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ElasticLoadBalancing::LoadBalancer\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ELB_TLS_HTTPS_LISTENERS_ONLY\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EMR_KERBEROS_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"emr-kerberos-enabled\",\n      Description: \"The rule is NON_COMPLIANT if a security configuration is not attached to the cluster or the security configuration does not satisfy the specified rule parameters.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EMR_KERBEROS_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.EMR_MASTER_NO_PUBLIC_IP = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"emr-master-no-public-ip\",\n      Description: \"Checks whether Amazon Elastic MapReduce (EMR) clusters' master nodes have public IPs. The rule is NON_COMPLIANT if the master node has a public IP.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": []},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"EMR_MASTER_NO_PUBLIC_IP\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.ENCRYPTED_VOLUMES = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"encrypted-volumes\",\n      Description: \"Checks whether EBS volumes that are in an attached state are encrypted.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Volume\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ENCRYPTED_VOLUMES\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.FMS_SHIELD_RESOURCE_POLICY_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"webACLId\"] =\n    {\"Type\": \"String\", \"Description\": \"The WebACLId of the web ACL.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n      cloudformationtemplate[\"Parameters\"][\"resourceTypes\"] =\n    {\"Type\": \"String\", \"Description\": \"The resource scope which this config rule will be applied to.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"fms-shield-resource-policy-check\",\n      Description: \"Checks whether an Application Load Balancer, Amazon CloudFront distributions, Elastic Load Balancer or Elastic IP has AWS Shield protection. It also checks if they have web ACL associated for Application Load Balancer and Amazon CloudFront distributions.\",\n\n      InputParameters: {\"webACLId\": {\"Ref\": \"webACLId\"}, \"resourceTypes\": {\"Ref\": \"resourceTypes\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\", \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"AWS::WAFRegional::WebACL\", \"AWS::EC2::EIP\", \"AWS::ElasticLoadBalancing::LoadBalancer\", \"AWS::ShieldRegional::Protection\", \"AWS::Shield::Protection\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"FMS_SHIELD_RESOURCE_POLICY_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.FMS_WEBACL_RESOURCE_POLICY_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"webACLId\"] =\n    {\"Type\": \"String\", \"Description\": \"The WebACLId of the web ACL.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"fms-webacl-resource-policy-check\",\n      Description: \"Checks whether the web ACL is associated with Application Load Balancers, API Gateway stage or CloudFront distributions. When AWS Firewall Manager creates this rule, the FMS policy owner specifies the webACLId in the FMS policy.\",\n\n      InputParameters: {\"webACLId\": {\"Ref\": \"webACLId\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::CloudFront::Distribution\", \"AWS::ApiGateway::Stage\", \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"AWS::WAFRegional::WebACL\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"FMS_WEBACL_RESOURCE_POLICY_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.FMS_WEBACL_RULEGROUP_ASSOCIATION_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"ruleGroups\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma-separated list of RuleGroupIds and WafOverrideAction pairs. (for example, ruleGroupId-1:NONE, ruleGroupId2:COUNT)\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"fms-webacl-rulegroup-association-check\",\n      Description: \"Checks whether the RuleGroupId and WafOverrideAction pairs are associated with the WebACL at highest priority. When AWS Firewall manager creates this rule, the FMS policy owner specifies the ruleGroups in the policy and can optionally enable remediation.\",\n\n      InputParameters: {\"ruleGroups\": {\"Ref\": \"ruleGroups\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::WAF::WebACL\", \"AWS::WAFRegional::WebACL\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"FMS_WEBACL_RULEGROUP_ASSOCIATION_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.FSX_RESOURCES_PROTECTED_BY_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"fsx-resources-protected-by-backup-plan\",\n      Description: \"Checks if Amazon FSx File Systems are protected by a backup plan. The rule is NON_COMPLIANT if the Amazon FSx File System is not covered by a backup plan.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": []},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"FSX_RESOURCES_PROTECTED_BY_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.GUARDDUTY_ENABLED_CENTRALIZED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"guardduty-enabled-centralized\",\n      Description: \"Checks whether GuardDuty is enabled. You can optionally verify that the results are centralized in a specific AWS Account.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"GUARDDUTY_ENABLED_CENTRALIZED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.GUARDDUTY_NON_ARCHIVED_FINDINGS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"guardduty-non-archived-findings\",\n      Description: \"Checks whether Amazon GuardDuty has findings that are non archived. The rule is NON_COMPLIANT if Amazon GuardDuty has non archived low/medium/high severity findings older than the specified number in the daysLowSev/daysMediumSev/daysHighSev parameter.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"GUARDDUTY_NON_ARCHIVED_FINDINGS\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.IAM_CUSTOMER_POLICY_BLOCKED_KMS_ACTIONS = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"blockedActionsPatterns\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma-separated list of blocked KMS action patterns, for example, kms:*, kms:Decrypt, kms:ReEncrypt*.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-customer-policy-blocked-kms-actions\",\n      Description: \"Checks that the managed AWS Identity and Access Management (IAM) policies that you create do not allow blocked actions on all AWS KMS keys. The rule is NON_COMPLIANT if any blocked action is allowed on all AWS KMS keys by the managed IAM policy.\",\n\n      InputParameters: {\"blockedActionsPatterns\": {\"Ref\": \"blockedActionsPatterns\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::IAM::Policy\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_CUSTOMER_POLICY_BLOCKED_KMS_ACTIONS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_GROUP_HAS_USERS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-group-has-users-check\",\n      Description: \"Checks whether IAM groups have at least one IAM user.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::IAM::Group\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_GROUP_HAS_USERS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_INLINE_POLICY_BLOCKED_KMS_ACTIONS = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"blockedActionsPatterns\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma-separated list of blocked KMS action patterns, for example, kms:*, kms:Decrypt, kms:ReEncrypt*.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-inline-policy-blocked-kms-actions\",\n      Description: \"Checks that the inline policies attached to your IAM users, roles, and groups do not allow blocked actions on all AWS Key Management Service (KMS) keys. The rule is NON_COMPLIANT if any blocked action is allowed on all KMS keys in an inline policy.\",\n\n      InputParameters: {\"blockedActionsPatterns\": {\"Ref\": \"blockedActionsPatterns\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::IAM::Group\", \"AWS::IAM::Role\", \"AWS::IAM::User\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_INLINE_POLICY_BLOCKED_KMS_ACTIONS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_NO_INLINE_POLICY_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-no-inline-policy-check\",\n      Description: \"Checks that inline policy feature is not in use. The rule is NON_COMPLIANT if an AWS Identity and Access Management (IAM) user, IAM role or IAM group has any inline policy.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::IAM::User\", \"AWS::IAM::Role\", \"AWS::IAM::Group\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_NO_INLINE_POLICY_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_PASSWORD_POLICY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-password-policy\",\n      Description: \"Checks whether the account password policy for IAM users meets the specified requirements.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_PASSWORD_POLICY\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.IAM_POLICY_BLACKLISTED_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"policyArns\"] =\n    {\"Type\": \"String\", \"Default\": \"arn:aws:iam::aws:policy/AdministratorAccess\", \"Description\": \"Comma separated list of IAM policy arns which should not be attached to any IAM entity.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-policy-blacklisted-check\",\n      Description: \"Checks that none of your IAM users, groups, or roles (excluding exceptionList) have the specified policies attached.\",\n\n      InputParameters: {\"policyArns\": {\"Ref\": \"policyArns\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::IAM::User\", \"AWS::IAM::Group\", \"AWS::IAM::Role\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_POLICY_BLACKLISTED_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_POLICY_IN_USE = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"policyARN\"] =\n    {\"Type\": \"String\", \"Description\": \"An IAM policy ARN to be checked.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-policy-in-use\",\n      Description: \"Checks whether the IAM policy ARN is attached to an IAM user, or a group with one or more IAM users, or an IAM role with one or more trusted entity.\",\n\n      InputParameters: {\"policyARN\": {\"Ref\": \"policyARN\"}},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_POLICY_IN_USE\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-policy-no-statements-with-admin-access\",\n      Description: \"Checks whether the default version of AWS Identity and Access Management (IAM) policies do not have administrator access. If any statement has 'Effect': 'Allow' with 'Action': '*' over 'Resource': '*', the rule is non-compliant.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::IAM::Policy\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_POLICY_NO_STATEMENTS_WITH_ADMIN_ACCESS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_POLICY_NO_STATEMENTS_WITH_FULL_ACCESS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-policy-no-statements-with-full-access\",\n      Description: \"Checks if AWS Identity and Access Management (IAM) policies grant permissions to all actions on individual AWS resources. The rule is NON_COMPLIANT if the managed IAM policy allows full access to at least 1 AWS service.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::IAM::Policy\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_POLICY_NO_STATEMENTS_WITH_FULL_ACCESS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_ROLE_MANAGED_POLICY_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"managedPolicyArns\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma-separated list of AWS managed policy ARNs.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-role-managed-policy-check\",\n      Description: \"Checks that the AWS Identity and Access Management (IAM) role is attached to all AWS managed policies specified in the list of managed policies. The rule is non-compliant if the IAM role is not attached to the AWS managed policy.\",\n\n      InputParameters: {\"managedPolicyArns\": {\"Ref\": \"managedPolicyArns\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::IAM::Role\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_ROLE_MANAGED_POLICY_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_ROOT_ACCESS_KEY_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-root-access-key-check\",\n      Description: \"Checks whether the root user access key is available. The rule is compliant if the user access key does not exist.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_ROOT_ACCESS_KEY_CHECK\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.IAM_USER_GROUP_MEMBERSHIP_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-user-group-membership-check\",\n      Description: \"Checks whether IAM users are members of at least one IAM group.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::IAM::User\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_USER_GROUP_MEMBERSHIP_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_USER_MFA_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-user-mfa-enabled\",\n      Description: \"Checks whether the AWS Identity and Access Management users have multi-factor authentication (MFA) enabled.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_USER_MFA_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.IAM_USER_NO_POLICIES_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-user-no-policies-check\",\n      Description: \"Checks that none of your IAM users have policies attached. IAM users must inherit permissions from IAM groups or roles.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::IAM::User\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_USER_NO_POLICIES_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_USER_UNUSED_CREDENTIALS_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"maxCredentialUsageAge\"] =\n    {\"Type\": \"String\", \"Default\": \"90\", \"Description\": \"Maximum number of days a credential cannot be used. The default value is 90 days.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-user-unused-credentials-check\",\n      Description: \"Checks whether your AWS Identity and Access Management (IAM) users have passwords or active access keys that have not been used within the specified number of days you provided.\",\n\n      InputParameters: {\"maxCredentialUsageAge\": {\"Ref\": \"maxCredentialUsageAge\"}},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"IAM_USER_UNUSED_CREDENTIALS_CHECK\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.INCOMING_SSH_DISABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"restricted-ssh\",\n      Description: \"Checks whether security groups that are in use disallow unrestricted incoming SSH traffic.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::SecurityGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"INCOMING_SSH_DISABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.INSTANCES_IN_VPC = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-instances-in-vpc\",\n      Description: \"Checks whether your EC2 instances belong to a virtual private cloud (VPC).\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Instance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"INSTANCES_IN_VPC\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"internet-gateway-authorized-vpc-only\",\n      Description: \"Checks that Internet gateways (IGWs) are only attached to an authorized Amazon Virtual Private Cloud (VPCs). The rule is NON_COMPLIANT if IGWs are not attached to an authorized VPC.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::InternetGateway\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"INTERNET_GATEWAY_AUTHORIZED_VPC_ONLY\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.KINESIS_STREAM_ENCRYPTED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"kinesis-stream-encrypted\",\n      Description: \"Checks if Amazon Kinesis streams are encrypted at rest with server-side encryption. The rule is NON_COMPLIANT for a Kinesis stream if 'StreamEncryption' is not present.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Kinesis::Stream\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"KINESIS_STREAM_ENCRYPTED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.KMS_CMK_NOT_SCHEDULED_FOR_DELETION = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"kms-cmk-not-scheduled-for-deletion\",\n      Description: \"Checks whether customer master keys (CMKs) are not scheduled for deletion in AWS Key Management Service (KMS). The rule is NON_COMPLAINT if CMKs are scheduled for deletion.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::KMS::Key\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"KMS_CMK_NOT_SCHEDULED_FOR_DELETION\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.LAMBDA_CONCURRENCY_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"lambda-concurrency-check\",\n      Description: \"Checks whether the AWS Lambda function is configured with function-level concurrent execution limit. The rule is NON_COMPLIANT if the Lambda function is not configured with function-level concurrent execution limit.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Lambda::Function\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"LAMBDA_CONCURRENCY_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.LAMBDA_DLQ_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"lambda-dlq-check\",\n      Description: \"Checks whether an AWS Lambda function is configured with a dead-letter queue. The rule is NON_COMPLIANT if the Lambda function is not configured with a dead-letter queue.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Lambda::Function\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"LAMBDA_DLQ_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"lambda-function-public-access-prohibited\",\n      Description: \"Checks whether the Lambda function policy prohibits public access.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Lambda::Function\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"LAMBDA_FUNCTION_PUBLIC_ACCESS_PROHIBITED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.LAMBDA_FUNCTION_SETTINGS_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"runtime\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma-separated list of AWS Lambda runtime values\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"lambda-function-settings-check\",\n      Description: \"Checks that the AWS Lambda function settings for runtime, role, timeout, and memory size match the expected values.\",\n\n      InputParameters: {\"runtime\": {\"Ref\": \"runtime\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Lambda::Function\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"LAMBDA_FUNCTION_SETTINGS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.LAMBDA_INSIDE_VPC = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"lambda-inside-vpc\",\n      Description: \"Checks whether an AWS Lambda function is in an Amazon Virtual Private Cloud. The rule is NON_COMPLIANT if the Lambda function is not in a VPC.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Lambda::Function\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"LAMBDA_INSIDE_VPC\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.LAMBDA_VPC_MULTI_AZ_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"lambda-vpc-multi-az-check\",\n      Description: \"Checks if Lambda has more than 1 availability zone associated. The rule is NON_COMPLIANT if only 1 availability zone is associated with the Lambda or the number of availability zones associated is less than number specified in the optional parameter.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Lambda::Function\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"LAMBDA_VPC_MULTI_AZ_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"mfa-enabled-for-iam-console-access\",\n      Description: \"Checks whether AWS Multi-Factor Authentication (MFA) is enabled for all AWS Identity and Access Management (IAM) users that use a console password. The rule is compliant if MFA is enabled.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"MFA_ENABLED_FOR_IAM_CONSOLE_ACCESS\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.MULTI_REGION_CLOUD_TRAIL_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"multi-region-cloudtrail-enabled\",\n      Description: \"Checks that there is at least one multi-region AWS CloudTrail. The rule is non-compliant if the trails do not match input parameters\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"MULTI_REGION_CLOUD_TRAIL_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.NACL_NO_UNRESTRICTED_SSH_RDP = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"nacl-no-unrestricted-ssh-rdp\",\n      Description: \"Checks if default ports for SSH/RDP ingress traffic for network access control lists (NACLs) is unrestricted. The rule is NON_COMPLIANT if a NACL inbound entry allows a source CIDR block of '0.0.0.0/0' or '::/0' for ports 22 or 3389.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::NetworkAcl\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"NACL_NO_UNRESTRICTED_SSH_RDP\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.NETFW_STATELESS_RULE_GROUP_NOT_EMPTY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"netfw-stateless-rule-group-not-empty\",\n      Description: \"Checks if a Stateless Network Firewall Rule Group contains rules. The rule is NON_COMPLIANT if there are no rules in a Stateless Network Firewall Rule Group.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::NetworkFirewall::RuleGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"NETFW_STATELESS_RULE_GROUP_NOT_EMPTY\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.NO_UNRESTRICTED_ROUTE_TO_IGW = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"no-unrestricted-route-to-igw\",\n      Description: \"Checks if there are public routes in the route table to an Internet Gateway (IGW). The rule is NON_COMPLIANT if a route to an IGW has a destination CIDR block of '0.0.0.0/0' or '::/0' or if a destination CIDR block does not match the rule parameter.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::RouteTable\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"NO_UNRESTRICTED_ROUTE_TO_IGW\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.OPENSEARCH_ACCESS_CONTROL_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"opensearch-access-control-enabled\",\n      Description: \"Checks if Amazon OpenSearch Service domains have fine-grained access control enabled. The rule is NON_COMPLIANT if AdvancedSecurityOptions is not enabled for the OpenSearch Service domain.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::OpenSearch::Domain\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"OPENSEARCH_ACCESS_CONTROL_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.OPENSEARCH_AUDIT_LOGGING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"opensearch-audit-logging-enabled\",\n      Description: \"Checks if Amazon OpenSearch Service domains have audit logging enabled. The rule is NON_COMPLIANT if an OpenSearch Service domain does not have audit logging enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::OpenSearch::Domain\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"OPENSEARCH_AUDIT_LOGGING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.OPENSEARCH_DATA_NODE_FAULT_TOLERANCE = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"opensearch-data-node-fault-tolerance\",\n      Description: \"Checks if Amazon OpenSearch Service domains are configured with at least three data nodes and zoneAwarenessEnabled is true. The rule is NON_COMPLIANT for an OpenSearch domain if 'instanceCount' is less than 3 or 'zoneAwarenessEnabled' is set to 'false'.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::OpenSearch::Domain\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"OPENSEARCH_DATA_NODE_FAULT_TOLERANCE\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.OPENSEARCH_ENCRYPTED_AT_REST = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"opensearch-encrypted-at-rest\",\n      Description: \"Checks if Amazon OpenSearch Service domains have encryption at rest configuration enabled. The rule is NON_COMPLIANT if EncryptionAtRestOptions field is not enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::OpenSearch::Domain\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"OPENSEARCH_ENCRYPTED_AT_REST\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.OPENSEARCH_HTTPS_REQUIRED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"opensearch-https-required\",\n      Description: \"Checks whether connections to OpenSearch domains are using HTTPS. The rule is NON_COMPLIANT if the Amazon OpenSearch domain 'EnforceHTTPS' is not 'true' or is 'true' and 'TLSSecurityPolicy' is not in 'tlsPolicies'.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::OpenSearch::Domain\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"OPENSEARCH_HTTPS_REQUIRED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.OPENSEARCH_IN_VPC_ONLY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"opensearch-in-vpc-only\",\n      Description: \"Checks if Amazon OpenSearch Service domains are in an Amazon Virtual Private Cloud (VPC). The rule is NON_COMPLIANT if an OpenSearch Service domain endpoint is public.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::OpenSearch::Domain\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"OPENSEARCH_IN_VPC_ONLY\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.OPENSEARCH_LOGS_TO_CLOUDWATCH = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"opensearch-logs-to-cloudwatch\",\n      Description: \"Checks if Amazon OpenSearch Service domains are configured to send logs to Amazon CloudWatch Logs. The rule is NON_COMPLIANT if logging is not configured.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::OpenSearch::Domain\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"OPENSEARCH_LOGS_TO_CLOUDWATCH\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.OPENSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"opensearch-node-to-node-encryption-check\",\n      Description: \"Check that Amazon OpenSearch Service nodes are encrypted end to end. The rule is NON_COMPLIANT if the node-to-node encryption is not enabled on the domain\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::OpenSearch::Domain\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"OPENSEARCH_NODE_TO_NODE_ENCRYPTION_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_AUTOMATIC_MINOR_VERSION_UPGRADE_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-automatic-minor-version-upgrade-enabled\",\n      Description: \"Checks if Amazon Relational Database Service (RDS) database instances are configured for automatic minor version upgrades. The rule is NON_COMPLIANT if the value of 'autoMinorVersionUpgrade' is false.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBInstance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_AUTOMATIC_MINOR_VERSION_UPGRADE_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_CLUSTER_DEFAULT_ADMIN_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-cluster-default-admin-check\",\n      Description: \"Checks if an Amazon Relational Database Service (Amazon RDS) database cluster has changed the admin username from its default value. The rule is NON_COMPLIANT if the admin username is set to the default value.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBCluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_CLUSTER_DEFAULT_ADMIN_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_CLUSTER_DELETION_PROTECTION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-cluster-deletion-protection-enabled\",\n      Description: \"Checks if an Amazon Relational Database Service (Amazon RDS) cluster has deletion protection enabled. This rule is NON_COMPLIANT if an RDS cluster does not have deletion protection enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBCluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_CLUSTER_DELETION_PROTECTION_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_CLUSTER_IAM_AUTHENTICATION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-cluster-iam-authentication-enabled\",\n      Description: \"Checks if an Amazon RDS Cluster has AWS Identity and Access Management (IAM) authentication enabled. The rule is NON_COMPLIANT if an RDS Cluster does not have IAM authentication enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBCluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_CLUSTER_IAM_AUTHENTICATION_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_CLUSTER_MULTI_AZ_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-cluster-multi-az-enabled\",\n      Description: \"Checks if Multi-AZ replication is enabled on Amazon Aurora and Hermes clusters managed by Amazon Relational Database Service (Amazon RDS). This rule is NON_COMPLIANT if an Amazon RDS instance is not configured with Multi-AZ.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBCluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_CLUSTER_MULTI_AZ_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_DB_SECURITY_GROUP_NOT_ALLOWED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-db-security-group-not-allowed\",\n      Description: \"Checks if there are any Amazon Relational Database Service (RDS) DB security groups that are not the default DB security group. The rule is NON_COMPLIANT is there are any DB security groups that are not the default DB security group.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBSecurityGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_DB_SECURITY_GROUP_NOT_ALLOWED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_ENHANCED_MONITORING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-enhanced-monitoring-enabled\",\n      Description: \"Checks whether enhanced monitoring is enabled for Amazon Relational Database Service (Amazon RDS) instances.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBInstance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_ENHANCED_MONITORING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_INSTANCE_DEFAULT_ADMIN_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-instance-default-admin-check\",\n      Description: \"Checks if an Amazon Relational Database Service (Amazon RDS) database has changed the admin username from its default value. This rule will only run on RDS database instances. The rule is NON_COMPLIANT if the admin username is set to the default value.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBInstance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_INSTANCE_DEFAULT_ADMIN_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_INSTANCE_DELETION_PROTECTION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-instance-deletion-protection-enabled\",\n      Description: \"Checks if an Amazon Relational Database Service (Amazon RDS) instance has deletion protection enabled. This rule is NON_COMPLIANT if an Amazon RDS instance does not have deletion protection enabled i.e deletionProtection is set to false.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBInstance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_INSTANCE_DELETION_PROTECTION_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_INSTANCE_IAM_AUTHENTICATION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-instance-iam-authentication-enabled\",\n      Description: \"Checks if an Amazon Relational Database Service (Amazon RDS) instance has AWS Identity and Access Management (IAM) authentication enabled. This rule is NON_COMPLIANT if an Amazon RDS instance does not have AWS IAM authentication enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBInstance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_INSTANCE_IAM_AUTHENTICATION_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_INSTANCE_PUBLIC_ACCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-instance-public-access-check\",\n      Description: \"Checks whether the Amazon Relational Database Service (RDS) instances are not publicly accessible. The rule is non-compliant if the publiclyAccessible field is true in the instance configuration item.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBInstance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_INSTANCE_PUBLIC_ACCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_IN_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-in-backup-plan\",\n      Description: \"Checks whether Amazon RDS database is present in back plans of AWS Backup. The rule is NON_COMPLIANT if Amazon RDS databases are not included in any AWS Backup plan.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_IN_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.RDS_LOGGING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-logging-enabled\",\n      Description: \"Checks that respective logs of Amazon Relational Database Service (Amazon RDS) are enabled. The rule is NON_COMPLIANT if any log types are not enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBInstance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_LOGGING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_MULTI_AZ_SUPPORT = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-multi-az-support\",\n      Description: \"Checks whether high availability is enabled for your RDS DB instances.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBInstance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_MULTI_AZ_SUPPORT\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_RESOURCES_PROTECTED_BY_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-resources-protected-by-backup-plan\",\n      Description: \"Checks if Amazon Relational Database Service (Amazon RDS) instances are protected by a backup plan. The rule is NON_COMPLIANT if the Amazon RDS Database instance is not covered by a backup plan.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBInstance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_RESOURCES_PROTECTED_BY_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.RDS_SNAPSHOTS_PUBLIC_PROHIBITED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-snapshots-public-prohibited\",\n      Description: \"Checks if Amazon Relational Database Service (Amazon RDS) snapshots are public. The rule is non-compliant if any existing and new Amazon RDS snapshots are public.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBSnapshot\", \"AWS::RDS::DBClusterSnapshot\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_SNAPSHOTS_PUBLIC_PROHIBITED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_SNAPSHOT_ENCRYPTED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-snapshot-encrypted\",\n      Description: \"Checks whether Amazon Relational Database Service (Amazon RDS) DB snapshots are encrypted. The rule is NON_COMPLIANT, if the Amazon RDS DB snapshots are not encrypted.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBSnapshot\", \"AWS::RDS::DBClusterSnapshot\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_SNAPSHOT_ENCRYPTED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RDS_STORAGE_ENCRYPTED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"rds-storage-encrypted\",\n      Description: \"Checks whether storage encryption is enabled for your RDS DB instances.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::RDS::DBInstance\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RDS_STORAGE_ENCRYPTED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.REDSHIFT_BACKUP_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"redshift-backup-enabled\",\n      Description: \"Checks that Amazon Redshift automated snapshots are enabled for clusters.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Redshift::Cluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"REDSHIFT_BACKUP_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.REDSHIFT_CLUSTER_CONFIGURATION_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"clusterDbEncrypted\"] =\n    {\"Type\": \"String\", \"Default\": \"true\", \"Description\": \"Database encryption is enabled.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n      cloudformationtemplate[\"Parameters\"][\"loggingEnabled\"] =\n    {\"Type\": \"String\", \"Default\": \"true\", \"Description\": \"Audit logging is enabled.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"redshift-cluster-configuration-check\",\n      Description: \"Checks whether Amazon Redshift clusters have the specified settings.\",\n\n      InputParameters: {\"clusterDbEncrypted\": {\"Ref\": \"clusterDbEncrypted\"}, \"loggingEnabled\": {\"Ref\": \"loggingEnabled\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Redshift::Cluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"REDSHIFT_CLUSTER_CONFIGURATION_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.REDSHIFT_CLUSTER_KMS_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"redshift-cluster-kms-enabled\",\n      Description: \"Checks if Amazon RedShift clusters are using a specified AWS Key Management Service key for encryption. The rule is NON_COMPLIANT if the cluster is not encrypted or encrypted with another key.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Redshift::Cluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"REDSHIFT_CLUSTER_KMS_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.REDSHIFT_CLUSTER_MAINTENANCESETTINGS_CHECK = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"allowVersionUpgrade\"] =\n    {\"Type\": \"String\", \"Default\": \"true\", \"Description\": \"Allow version upgrade is enabled.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"redshift-cluster-maintenancesettings-check\",\n      Description: \"Checks whether Amazon Redshift clusters have the specified maintenance settings.\",\n\n      InputParameters: {\"allowVersionUpgrade\": {\"Ref\": \"allowVersionUpgrade\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Redshift::Cluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"REDSHIFT_CLUSTER_MAINTENANCESETTINGS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"redshift-cluster-public-access-check\",\n      Description: \"Checks whether Amazon Redshift clusters are not publicly accessible. The rule is NON_COMPLIANT if the publiclyAccessible field is true in the cluster configuration item.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Redshift::Cluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"REDSHIFT_CLUSTER_PUBLIC_ACCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.REDSHIFT_DEFAULT_ADMIN_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"redshift-default-admin-check\",\n      Description: \"Checks if an Amazon Redshift cluster has changed the admin username from its default value. The rule is NON_COMPLIANT if the admin username for a Redshift cluster is set to âawsuserâ or if the username does not match what is listed in parameter.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Redshift::Cluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"REDSHIFT_DEFAULT_ADMIN_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.REDSHIFT_DEFAULT_DB_NAME_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"redshift-default-db-name-check\",\n      Description: \"Checks if a Redshift cluster has changed its database name from the default value. The rule is NON_COMPLIANT if the database name for a Redshift cluster is set to âdevâ, or if the optional parameter is provided and the database name does not match.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Redshift::Cluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"REDSHIFT_DEFAULT_DB_NAME_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.REDSHIFT_ENHANCED_VPC_ROUTING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"redshift-enhanced-vpc-routing-enabled\",\n      Description: \"Checks if Amazon Redshift cluster has 'enhancedVpcRouting' enabled. The rule is NON_COMPLIANT if 'enhancedVpcRouting' is not enabled or if the configuration.enhancedVpcRouting field is 'false'. \",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Redshift::Cluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"REDSHIFT_ENHANCED_VPC_ROUTING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.REDSHIFT_REQUIRE_TLS_SSL = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"redshift-require-tls-ssl\",\n      Description: \"Checks whether Amazon Redshift clusters require TLS/SSL encryption to connect to SQL clients. The rule is NON_COMPLIANT if any Amazon Redshift cluster has parameter require_SSL not set to true.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::Redshift::Cluster\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"REDSHIFT_REQUIRE_TLS_SSL\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.REQUIRED_TAGS = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"tag1Key\"] =\n    {\"Type\": \"String\", \"Default\": \"CostCenter\", \"Description\": \"Key of the required tag.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"required-tags\",\n      Description: \"Checks whether your resources have the tags that you specify.\",\n\n      InputParameters: {\"tag1Key\": {\"Ref\": \"tag1Key\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::ACM::Certificate\", \"AWS::AutoScaling::AutoScalingGroup\", \"AWS::CloudFormation::Stack\", \"AWS::CodeBuild::Project\", \"AWS::DynamoDB::Table\", \"AWS::EC2::CustomerGateway\", \"AWS::EC2::Instance\", \"AWS::EC2::InternetGateway\", \"AWS::EC2::NetworkAcl\", \"AWS::EC2::NetworkInterface\", \"AWS::EC2::RouteTable\", \"AWS::EC2::SecurityGroup\", \"AWS::EC2::Subnet\", \"AWS::EC2::Volume\", \"AWS::EC2::VPC\", \"AWS::EC2::VPNConnection\", \"AWS::EC2::VPNGateway\", \"AWS::ElasticLoadBalancing::LoadBalancer\", \"AWS::ElasticLoadBalancingV2::LoadBalancer\", \"AWS::RDS::DBInstance\", \"AWS::RDS::DBSecurityGroup\", \"AWS::RDS::DBSnapshot\", \"AWS::RDS::DBSubnetGroup\", \"AWS::RDS::EventSubscription\", \"AWS::Redshift::Cluster\", \"AWS::Redshift::ClusterParameterGroup\", \"AWS::Redshift::ClusterSecurityGroup\", \"AWS::Redshift::ClusterSnapshot\", \"AWS::Redshift::ClusterSubnetGroup\", \"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"REQUIRED_TAGS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RESTRICTED_INCOMING_TRAFFIC = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"restricted-common-ports\",\n      Description: \"Checks whether security groups that are in use disallow unrestricted incoming TCP traffic to the specified ports.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::SecurityGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"RESTRICTED_INCOMING_TRAFFIC\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ROOT_ACCOUNT_HARDWARE_MFA_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"root-account-hardware-mfa-enabled\",\n      Description: \"Checks whether your AWS account is enabled to use multi-factor authentication (MFA) hardware device to sign in with root credentials.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ROOT_ACCOUNT_HARDWARE_MFA_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.ROOT_ACCOUNT_MFA_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"root-account-mfa-enabled\",\n      Description: \"Checks whether the root user of your AWS account requires multi-factor authentication for console sign-in.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"ROOT_ACCOUNT_MFA_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-account-level-public-access-blocks\",\n      Description: \"Checks whether the required public access block settings are configured from account level. The rule is NON_COMPLIANT when the public access block settings are not configured from account level.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::AccountPublicAccessBlock\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS_PERIODIC = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-account-level-public-access-blocks-periodic\",\n      Description: \"Checks if the required public access block settings are configured from account level.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_ACCOUNT_LEVEL_PUBLIC_ACCESS_BLOCKS_PERIODIC\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_ACL_PROHIBITED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-acl-prohibited\",\n      Description: \"Checks if Amazon Simple Storage Service (Amazon S3) Buckets allow user permissions through access control lists (ACLs). The rule is NON_COMPLIANT if ACLs are configured for user access in Amazon S3 Buckets.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_ACL_PROHIBITED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_BLACKLISTED_ACTIONS_PROHIBITED = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"blacklistedActionPattern\"] =\n    {\"Type\": \"String\", \"Description\": \"Comma-separated list of blacklisted action patterns, for example, s3:GetBucket* and s3:DeleteObject.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-blacklisted-actions-prohibited\",\n      Description: \"Checks that the S3 bucket policy does not allow blacklisted bucket-level and object-level actions for principals from other AWS Accounts. The rule is non-compliant if any blacklisted actions are allowed by the S3 bucket policy.\",\n\n      InputParameters: {\"blacklistedActionPattern\": {\"Ref\": \"blacklistedActionPattern\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_BLACKLISTED_ACTIONS_PROHIBITED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_DEFAULT_LOCK_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-default-lock-enabled\",\n      Description: \"Checks whether Amazon S3 bucket has lock enabled, by default. The rule is NON_COMPLIANT if the lock is not enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_DEFAULT_LOCK_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-level-public-access-prohibited\",\n      Description: \"Checks if Amazon Simple Storage Service (Amazon S3) buckets are publicly accessible. This rule is NON_COMPLIANT if an Amazon S3 bucket is not listed in the excludedPublicBuckets parameter and bucket level settings are public.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_LEVEL_PUBLIC_ACCESS_PROHIBITED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_LOGGING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-logging-enabled\",\n      Description: \"Checks whether logging is enabled for your S3 buckets.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_LOGGING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_POLICY_GRANTEE_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-policy-grantee-check\",\n      Description: \"Checks that the access granted by the Amazon S3 bucket is restricted to any of the AWS principals, federated users, service principals, IP addresses, or VPCs that you provide. The rule is COMPLIANT if a bucket policy is not present.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_POLICY_GRANTEE_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_POLICY_NOT_MORE_PERMISSIVE = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"controlPolicy\"] =\n    {\"Type\": \"String\", \"Description\": \"Amazon S3 bucket policy that defines an upper bound on the permissions of your S3 buckets. The policy can be a maximum of 1024 characters long.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-policy-not-more-permissive\",\n      Description: \"Verifies that your Amazon S3 bucket policies do not allow other inter-account permissions than the control S3 bucket policy that you provide.\",\n\n      InputParameters: {\"controlPolicy\": {\"Ref\": \"controlPolicy\"}},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_POLICY_NOT_MORE_PERMISSIVE\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_PUBLIC_READ_PROHIBITED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-public-read-prohibited\",\n      Description: \"Checks that your Amazon S3 buckets do not allow public read access. The rule checks the Block Public Access settings, the bucket policy, and the bucket access control list (ACL).\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_PUBLIC_READ_PROHIBITED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_PUBLIC_WRITE_PROHIBITED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-public-write-prohibited\",\n      Description: \"Checks that your Amazon S3 buckets do not allow public write access. The rule checks the Block Public Access settings, the bucket policy, and the bucket access control list (ACL).\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_PUBLIC_WRITE_PROHIBITED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_REPLICATION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-replication-enabled\",\n      Description: \"Checks whether the Amazon S3 buckets have cross-region replication enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_REPLICATION_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-server-side-encryption-enabled\",\n      Description: \"Checks that your Amazon S3 bucket either has S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server side encryption.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_SERVER_SIDE_ENCRYPTION_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_SSL_REQUESTS_ONLY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-ssl-requests-only\",\n      Description: \"Checks whether S3 buckets have policies that require requests to use Secure Socket Layer (SSL).\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_SSL_REQUESTS_ONLY\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_BUCKET_VERSIONING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-bucket-versioning-enabled\",\n      Description: \"Checks whether versioning is enabled for your S3 buckets.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_BUCKET_VERSIONING_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_DEFAULT_ENCRYPTION_KMS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-default-encryption-kms\",\n      Description: \"Checks whether the Amazon S3 buckets are encrypted with AWS Key Management Service(AWS KMS). The rule is NON_COMPLIANT if the Amazon S3 bucket is not encrypted with AWS KMS key.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_DEFAULT_ENCRYPTION_KMS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_EVENT_NOTIFICATIONS_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-event-notifications-enabled\",\n      Description: \"Checks if Amazon S3 Events Notifications are enabled on an S3 bucket. The rule is NON_COMPLIANT if S3 Events Notifications are not set on a bucket, or if the event type or destination do not match the eventTypes and destinationArn parameters.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_EVENT_NOTIFICATIONS_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.S3_VERSION_LIFECYCLE_POLICY_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"s3-version-lifecycle-policy-check\",\n      Description: \"Checks if Amazon Simple Storage Service (Amazon S3) version enabled buckets have lifecycle policy configured. The rule is NON_COMPLIANT if Amazon S3 lifecycle policy is not enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::S3::Bucket\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"S3_VERSION_LIFECYCLE_POLICY_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"sagemaker-endpoint-configuration-kms-key-configured\",\n      Description: \"Checks whether AWS Key Management Service (KMS) key is configured for an Amazon SageMaker endpoint configuration. The rule is NON_COMPLIANT if 'KmsKeyId' is not specified for the Amazon SageMaker endpoint configuration.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SAGEMAKER_ENDPOINT_CONFIGURATION_KMS_KEY_CONFIGURED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"sagemaker-notebook-instance-kms-key-configured\",\n      Description: \"Check whether an AWS Key Management Service (KMS) key is configured for an Amazon SageMaker notebook instance. The rule is NON_COMPLIANT if 'KmsKeyId' is not specified for the Amazon SageMaker notebook instance.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SAGEMAKER_NOTEBOOK_INSTANCE_KMS_KEY_CONFIGURED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"sagemaker-notebook-no-direct-internet-access\",\n      Description: \"Checks whether direct internet access is disabled for an Amazon SageMaker notebook instance. The rule is NON_COMPLIANT if Amazon SageMaker notebook instances are internet-enabled.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SAGEMAKER_NOTEBOOK_NO_DIRECT_INTERNET_ACCESS\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.SECRETSMANAGER_ROTATION_ENABLED_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"secretsmanager-rotation-enabled-check\",\n      Description: \"Checks whether AWS Secret Manager secret has rotation enabled. If the maximumAllowedRotationFrequency parameter is specified, the rotation frequency of the secret is compared with the maximum allowed frequency.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::SecretsManager::Secret\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SECRETSMANAGER_ROTATION_ENABLED_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.SECRETSMANAGER_SCHEDULED_ROTATION_SUCCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"secretsmanager-scheduled-rotation-success-check\",\n      Description: \"Checks and verifies whether AWS Secret Manager secret rotation has rotated successfully as per the rotation schedule.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::SecretsManager::Secret\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SECRETSMANAGER_SCHEDULED_ROTATION_SUCCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.SECRETSMANAGER_SECRET_PERIODIC_ROTATION = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"secretsmanager-secret-periodic-rotation\",\n      Description: \"Checks if AWS Secrets Manager secrets have been rotated in the past 90 days by examining 'LastRotatedDate' value of the secret.  If 'LastRotatedDate' doesn't exist then this rule will check for the creation date of the secret.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SECRETSMANAGER_SECRET_PERIODIC_ROTATION\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.SECRETSMANAGER_SECRET_UNUSED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"secretsmanager-secret-unused\",\n      Description: \"Checks if AWS Secrets Manager secrets have been accessed in the past 90 days. This rule is NON_COMPLIANT if a secret has not been accessed in 90 days.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SECRETSMANAGER_SECRET_UNUSED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.SECRETSMANAGER_USING_CMK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"secretsmanager-using-cmk\",\n      Description: \"Checks if all secrets in AWS Secrets Manager are encrypted using an AWS Key Management Service (AWS KMS) customer master key (CMK). This rule is NON_COMPLIANT if a secret is encrypted using the default AWS KMS key\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::SecretsManager::Secret\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SECRETSMANAGER_USING_CMK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.SECURITYHUB_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"securityhub-enabled\",\n      Description: \"Checks that AWS Security Hub is enabled for an AWS Account. The rule is NON_COMPLIANT if AWS Security Hub is not enabled.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SECURITYHUB_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.SERVICE_VPC_ENDPOINT_ENABLED = function() {\n  \n      cloudformationtemplate[\"Parameters\"][\"serviceName\"] =\n    {\"Type\": \"String\", \"Description\": \"The short name or suffix for the service. Note: To get a list of available service names or valid suffix list, use DescribeVpcEndpointServices.\", \"MinLength\": \"1\", \"ConstraintDescription\": \"This parameter is required.\"}\n  ;\n    \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"service-vpc-endpoint-enabled\",\n      Description: \"Checks whether Service Endpoint for the service provided in rule parameter is created for each Amazon VPC. The rule returns NON_COMPLIANT if an Amazon VPC doesn't have a VPC endpoint created for the service.\",\n\n      InputParameters: {\"serviceName\": {\"Ref\": \"serviceName\"}},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SERVICE_VPC_ENDPOINT_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.SHIELD_ADVANCED_ENABLED_AUTORENEW = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"shield-advanced-enabled-autorenew\",\n      Description: \"Checks whether AWS Shield Advanced is enabled in your AWS account and this subscription is set to autorenew.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SHIELD_ADVANCED_ENABLED_AUTORENEW\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.SHIELD_DRT_ACCESS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"shield-drt-access\",\n      Description: \"Verify that DDoS response team (DRT) can access AWS account. The rule is NON_COMPLIANT if AWS Shield Advanced is enabled but the role for DRT access is not configured.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SHIELD_DRT_ACCESS\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.SNS_ENCRYPTED_KMS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"sns-encrypted-kms\",\n      Description: \"Checks whether Amazon SNS topic is encrypted with AWS Key Management Service (AWS KMS). The rule is NON_COMPLIANT if the Amazon SNS topic is not encrypted with AWS KMS.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::SNS::Topic\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SNS_ENCRYPTED_KMS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.SNS_TOPIC_MESSAGE_DELIVERY_NOTIFICATION_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"sns-topic-message-delivery-notification-enabled\",\n      Description: \"Checks if Amazon Simple Notification Service (SNS) logging is enabled for the delivery status of notification messages sent to a topic for the endpoints. The rule is NON_COMPLIANT if the delivery status notification for messages is not enabled.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::SNS::Topic\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SNS_TOPIC_MESSAGE_DELIVERY_NOTIFICATION_ENABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.SSM_DOCUMENT_NOT_PUBLIC = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ssm-document-not-public\",\n      Description: \"Checks if AWS Systems Manager documents owned by the account are public. This rule is NON_COMPLIANT if SSM documents with owner 'Self' are public.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SSM_DOCUMENT_NOT_PUBLIC\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"subnet-auto-assign-public-ip-disabled\",\n      Description: \"Checks if Amazon Virtual Private Cloud (Amazon VPC) subnets are assigned a public IP address. This rule is NON_COMPLIANT if Amazon VPC has subnets that are assigned a public IP address.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::Subnet\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.VIRTUALMACHINE_RESOURCES_PROTECTED_BY_BACKUP_PLAN = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"virtualmachine-resources-protected-by-backup-plan\",\n      Description: \"Checks if AWS Backup-Gateway VirtualMachines are protected by a backup plan. The rule is NON_COMPLIANT if the Backup-Gateway VirtualMachine is not covered by a backup plan.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": []},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"VIRTUALMACHINE_RESOURCES_PROTECTED_BY_BACKUP_PLAN\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.VPC_DEFAULT_SECURITY_GROUP_CLOSED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"vpc-default-security-group-closed\",\n      Description: \"Checks that the default security group of any Amazon Virtual Private Cloud (VPC) does not allow inbound or outbound traffic. The rule is non-compliant if the default security group has one or more inbound or outbound traffic.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::SecurityGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"VPC_DEFAULT_SECURITY_GROUP_CLOSED\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.VPC_FLOW_LOGS_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"vpc-flow-logs-enabled\",\n      Description: \"Checks whether Amazon Virtual Private Cloud flow logs are found and enabled for Amazon VPC.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"VPC_FLOW_LOGS_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.VPC_NETWORK_ACL_UNUSED_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"vpc-network-acl-unused-check\",\n      Description: \"Checks if there are unused Network Access Control Lists (NACLs). The rule is NON_COMPLIANT if an NACL is not associated with a subnet.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::NetworkAcl\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"VPC_NETWORK_ACL_UNUSED_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"vpc-sg-open-only-to-authorized-ports\",\n      Description: \"Checks whether any security groups with inbound 0.0.0.0/0 have TCP or UDP ports accessible. The rule is NON_COMPLIANT when a security group with inbound 0.0.0.0/0 has a port accessible which is not specified in the rule parameters.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::SecurityGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"VPC_SG_OPEN_ONLY_TO_AUTHORIZED_PORTS\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.VPC_VPN_2_TUNNELS_UP = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"vpc-vpn-2-tunnels-up\",\n      Description: \"Checks that both VPN tunnels provided by AWS Site-to-Site VPN are in UP status. The rule returns NON_COMPLIANT if one or both tunnels are in DOWN status.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::EC2::VPNConnection\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"VPC_VPN_2_TUNNELS_UP\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.WAFV2_LOGGING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"wafv2-logging-enabled\",\n      Description: \"Checks whether logging is enabled on AWS Web Application Firewall (WAFV2) regional and global web access control list (ACLs). The rule is NON_COMPLIANT if the logging is enabled but the logging destination does not match the value of the parameter.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"WAFV2_LOGGING_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.WAF_CLASSIC_LOGGING_ENABLED = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"waf-classic-logging-enabled\",\n      Description: \"Checks if logging is enabled on AWS Web Application Firewall (WAF) classic global web ACLs. This rule is NON_COMPLIANT for a global web ACL, if it does not have logging enabled.\",\n\n      InputParameters: {},\n      Scope: {},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"WAF_CLASSIC_LOGGING_ENABLED\",\n      },\n      MaximumExecutionFrequency: {Ref: \"MaximumExecutionFrequency\"},\n    },\n  };\n};\n\nconfigFactory.WAF_GLOBAL_RULEGROUP_NOT_EMPTY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"waf-global-rulegroup-not-empty\",\n      Description: \"Checks if an AWS WAF Classic rule group contains any rules. The rule is NON_COMPLIANT if there are no rules present within a rule group.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::WAF::RuleGroup\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"WAF_GLOBAL_RULEGROUP_NOT_EMPTY\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.WAF_GLOBAL_RULE_NOT_EMPTY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"waf-global-rule-not-empty\",\n      Description: \"Checks if an AWS WAF global rule contains any conditions. The rule is NON_COMPLIANT if no conditions are present within the WAF global rule.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::WAF::Rule\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"WAF_GLOBAL_RULE_NOT_EMPTY\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.WAF_GLOBAL_WEBACL_NOT_EMPTY = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"waf-global-webacl-not-empty\",\n      Description: \"Checks whether a WAF Global Web ACL contains any WAF rules or rule groups. This rule is NON_COMPLIANT if a Web ACL does not contain any WAF rule or rule group.\",\n\n      InputParameters: {},\n      Scope: {\"ComplianceResourceTypes\": [\"AWS::WAF::WebACL\"]},\n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"WAF_GLOBAL_WEBACL_NOT_EMPTY\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ACCOUNT_CONTACT_DETAILS_CONFIGURED_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"account-contact-details-configured-process-check\",\n      Description: \"Ensure the contact email and telephone number for AWS accounts are current and map to more than one individual in your organization. Within the My Account section of the console ensure correct information is specified in the Contact Information section.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ACCOUNT_SECURITY_CONTACT_CONFIGURED_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"account-security-contact-configured-process-check\",\n      Description: \"Ensure the contact email and telephone number for the your organizations security team are current. Within the My Account section of the AWS Management Console ensure the correct information is specified in the Security section.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ACCOUNT_SECURITY_QUESTIONS_CONFIGURED_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"account-security-questions-configured-process-check\",\n      Description: \"Ensure the security questions that can be used to authenticate individuals calling AWS customer service for support are configured. Within the My Account section of the AWS Management Console ensure three security challenge questions are configured.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ROOT_ACCOUNT_REGULAR_USE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"root-account-regular-use-process-check\",\n      Description: \"Ensure the use of the root account is avoided for everyday tasks. Within IAM, run a credential report to examine when the root user was last used.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_USER_CONSOLE_AND_API_ACCESS_AT_CREATION_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-user-console-and-api-access-at-creation-process-check\",\n      Description: \"Ensure access keys are not setup during the initial user setup for all IAM users that have a console password. For all IAM users with console access, compare the user 'Creation time` to the Access Key `Created` date.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_USER_SINGLE_ACCESS_KEY_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-user-single-access-key-process-check\",\n      Description: \"Ensure there is only one active access key available for any single IAM user. For all IAM users check that there is only one active key used within the Security Credentials tab for each user within IAM.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_SUPPORT_ROLE_CREATED_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-support-role-created-process-check\",\n      Description: \"Ensure a support role has been created to manage incidents with AWS Support. Check that the AWSSupportAccess policy is attached to an IAM role.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_EXPIRED_CERTIFICATES_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-expired-certificates-process-check\",\n      Description: \"Ensure that all the expired SSL/TLS certificates stored in IAM are removed. From the command line with the installed AWS CLI run the 'aws iam list-server-certificates' command and determine if there are any expired server certificates.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_ACCESS_ANALYZER_ENABLED_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-access-analyzer-enabled-process-check\",\n      Description: \"Ensure that IAM Access analyzer is enabled. Within the IAM section of the console, select Access analyzer and ensure that the STATUS is set to Active.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.CONFIG_ENABLED_ALL_REGIONS_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"config-enabled-all-regions-process-check\",\n      Description: \"Ensure AWS Config is enabled in all AWS Regions. Within the AWS Config section of the console, for each Region enabled ensure the AWS Config recorder is configured correctly. Ensure recording of global AWS resources is enabled at least in one Region.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_UNAUTHORIZED_API_CALLS_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-unauthorized-api-calls-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for unauthorized API calls.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_SIGN_IN_WITHOUT_MFA_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-sign-in-without-mfa-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for AWS Management Console sign-in without Multi-Factor Authentication (MFA).\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_ROOT_ACCOUNT_USE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-root-account-use-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for usage of the root account.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_IAM_POLICY_CHANGE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-iam-policy-change-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for IAM policy changes.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_CLOUDTRAIL_CONFIG_CHANGE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-cloudtrail-config-change-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for AWS CloudTrail configuration changes.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_S3_BUCKET_POLICY_CHANGE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-s3-bucket-policy-change-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for Amazon S3 bucket policy changes.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_VPC_NETWORK_GATEWAY_CHANGE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-vpc-network-gateway-change-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for changes to network gateways.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_VPC_ROUTE_TABLE_CHANGE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-vpc-route-table-change-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for route table changes.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_VPC_CHANGE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-vpc-change-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for Amazon Virtual Private Cloud (VPC) changes.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_ORGANIZATIONS_CHANGE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-organizations-change-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for AWS Organizations changes.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.VPC_NETWORKACL_OPEN_ADMIN_PORTS_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"vpc-networkacl-open-admin-ports-process-check\",\n      Description: \"Ensure no network ACLs allow public ingress to the remote server administration ports. Within the VPC section of the console, ensure there are network ACLs with a source of '0.0.0.0/0' with allowing ports or port ranges including remote server admin ports.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RESPONSE_PLAN_EXISTS_MAINTAINED_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"response-plan-exists-maintained-process-check\",\n      Description: \"empty description\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.VULN_SCANS_PERFORMED_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"vuln-scans-performed-process-check\",\n      Description: \"Ensure vulnerability scans are performed according to your compliance requirements. The cadence of scanning, tools used, and use of results should be defined by your organization.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.VULN_MANAGEMENT_PLAN_EXISTS_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"vuln-management-plan-exists-process-check\",\n      Description: \"Ensure a vulnerability management plan is developed and implemented in order to have a formally defined processes to address vulnerabilities in your environment.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.SECURITY_AWARENESS_PROGRAM_EXISTS_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"security-awareness-program-exists-process-check\",\n      Description: \"empty description\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.AUDIT_LOG_POLICY_EXISTS_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"audit-log-policy-exists-process-check\",\n      Description: \"empty description\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.RESPONSE_PLAN_TESTED_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"response-plan-tested-process-check\",\n      Description: \"empty description\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ANNUAL_RISK_ASSESSMENT_PERFORMED_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"annual-risk-assessment-performed-process-check\",\n      Description: \"empty description\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_CRITICAL_SECURITY_PATCH_AUTO_APPROVAL_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-critical-security-patch-auto-approval-process-check\",\n      Description: \"SHOULD 12.4.4.C.04[CID:3451]| Patch Baselines for Windows and/or Linux have been configured in Patch Manager, including auto-approval of critical security patches within 2 days of release.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_HARDENING_AND_STATE_MANAGEMENT_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-hardening-and-state-management-process-check\",\n      Description: \"SHOULD 14.1.8.C.01[CID:1149]| Hardened EC2 server image build processes and State Manager Associations are configured to remove unneeded components and services, and install anti-malware software and log agents.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.FEDERATE_WITH_CENTRAL_IDP_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"federate-with-central-idp-process-check\",\n      Description: \"SHOULD 16.1.46.C.02[CID:1893], MUST 16.4.33.C.01[CID:6852]| Workforce identities requiring access to AWS resources authenticate with a central IdP that is federated with AWS SSO. The central IdP locks-out system users after 3 failed logon attempts.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.KMS_CMK_FOR_EACH_DATA_CLASSIFICATION_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"kms-cmk-for-each-data-classification-process-check\",\n      Description: \"SHOULD 17.9.25.C.01[CID:3021]| At least one KMS Customer Master Key (CMK) has been defined for each distinct data classification, and the CMK(s) are being used to encrypt all data stored at that classification.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_CONSOLE_AUTH_FAILURES_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-console-auth-failures-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for AWS Management Console authentication failures.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_KMS_DISABLE_OR_DELETE_CMK_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-kms-disable-or-delete-cmk-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for disabling or scheduled deletion of customer created CMKs.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_AWS_CONFIG_CHANGE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-aws-config-change-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for AWS Config configuration changes.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_VPC_SECRITY_GROUP_CHANGE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-vpc-secrity-group-change-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for security group changes.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.ALARM_VPC_NACL_CHANGE_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"alarm-vpc-nacl-change-process-check\",\n      Description: \"Ensure a log metric filter and an alarm exists for changes to Network Access Control Lists (NACL).\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.VPC_PEERING_LEAST_ACCESS_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"vpc-peering-least-access-process-check\",\n      Description: \"Ensure the routing tables for Amazon VPC peering are 'least access'. Within the VPC section of the console, examine the route table entries to ensure that the least number of subnets or hosts are required to accomplish the purpose for peering are routable.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.VULN_MITIGATED_ACCEPTED_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"vuln-mitigated-accepted-process-check\",\n      Description: \"empty description\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.EC2_INSTANCE_ROLE_ASSIGNED_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"ec2-instance-role-assigned-process-check\",\n      Description: \"For instances that are known to perform AWS actions, ensure that they belong to an instance role that has the necessary permissions. Within the EC2 section of the AWS Management Console select the instance and check that the IAM role field is populated.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\nconfigFactory.IAM_CENTRAL_USER_MANAGEMENT_PROCESS_CHECK = function() {\n  \n  return {\n    Type: \"AWS::Config::ConfigRule\",\n    Properties: {\n      ConfigRuleName: \"iam-central-user-management-process-check\",\n      Description: \"Ensure IAM users are managed centrally via the identity federation or AWS Organizations for multi-account environments. Within the IAM section of the AWS Management Console, confirm that no IAM users representing individuals are present.\",\n\n      InputParameters: {},\n      \n      Source: {\n        Owner: \"AWS\",\n        SourceIdentifier: \"AWS_CONFIG_PROCESS_CHECK\",\n      },\n      \n    },\n  };\n};\n\n\nexport default cfinput;\n\n","<template>\n  <div style=\"display: flex; flex-direction: column; height: 100%\">\n    <v-expansion-panels>\n      <v-expansion-panel>\n        <v-expansion-panel-header>\n          <h4>\n            How to Use\n          </h4>\n        </v-expansion-panel-header>\n        <v-expansion-panel-content>\n          <div>\n            Features:\n            <ul>\n              <li>Drag by Name Columns</li>\n              <li>Filter by list of Name (Disables Drag)</li>\n              <li>Sort by TOTAL_RULES</li>\n              <li>Filter each Rule contains by 'X'</li>\n              <li>Extra Rule that are not in Conformance packs</li>\n              <li>\n                Export filtered table to csv for use in Excel or other\n                applications\n              </li>\n              <li>Select Rows to generate template</li>\n            </ul>\n          </div>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n    </v-expansion-panels>\n    <v-toolbar dense>\n      <v-btn @click=\"downloadCSV\">\n        <v-icon large>\n          mdi-export\n        </v-icon>\n        Export to CSV\n      </v-btn>\n      <v-spacer />\n      <!-- <v-btn @click=\"toCF\">\n        <v-icon large>\n          mdi-export\n        </v-icon>\n        Export to CF\n      </v-btn> -->\n      <v-spacer />\n      <v-switch\n        @change=\"flipColumnsTable\"\n        v-model=\"flipColumns\"\n        :loading=\"flipColumnsLoading\"\n      >\n      </v-switch>\n      <v-spacer />\n      <v-btn @click=\"missingRulesDialog = true\">\n        Extra Rules\n      </v-btn>\n    </v-toolbar>\n\n    <v-dialog :value=\"missingRulesDialog\" width=\"500\" fullscreen>\n      <v-card>\n        <v-card-title class=\"text-h5 grey lighten-2\">\n          Extra Rules not in Config Packs\n          <v-btn color=\"primary\" text @click=\"missingRulesDialog = false\">\n            Close\n          </v-btn>\n        </v-card-title>\n\n        <v-card-text>\n          <div class=\"missing_rules_columns\">\n            Updated {{ version.date }}\n            <div v-for=\"(item, index) in missingRules\" :key=\"index\">\n              {{ item }}\n            </div>\n          </div>\n        </v-card-text>\n\n        <v-divider></v-divider>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-row>\n      ><v-col>\n        <template> </template>\n      </v-col>\n    </v-row>\n    <ag-grid-vue\n      style=\"width: 100%; height: 100%\"\n      class=\"ag-theme-alpine\"\n      :columnDefs=\"headers\"\n      :rowData=\"data\"\n      @grid-ready=\"onGridReady\"\n      rowDragManaged=\"true\"\n      animateRows=\"true\"\n      debug=\"false\"\n      tooltipShowDelay=\"0\"\n      :defaultColDef=\"defaultColDef\"\n      tooltipMouseTrack=\"true\"\n      :overlayLoadingTemplate=\"overlayLoadingTemplate\"\n      :rowMultiSelectWithClick=\"true\"\n      rowSelection=\"multiple\"\n    >\n    </ag-grid-vue>\n  </div>\n</template>\n\n<script>\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport { AgGridVue } from \"ag-grid-vue\";\nimport data_rules from \"../assets/data.json\";\nimport data_headers from \"../assets/data_headers.json\";\nimport version from \"../assets/VERSION.json\";\nimport data_rule_set from \"../assets/data_rule_set.json\";\nimport customTooltip from \"./customTooltip\";\nimport ruleSetFilter from \"./ruleSetFilter\";\nimport cfinput from \"../helper/genCloudformation\";\n\nconst toolTipValueGetter = function(params) {\n  return params.value || \"X\";\n};\n\nexport default {\n  name: \"App\",\n  data: () => ({\n    columns: [{ prop: \"NAME\", name: \"NAME\", size: 300, pin: \"colPinStart\" }],\n    rows: [{ name: \"1\", details: \"Item 1\" }],\n    data: [],\n    gridApi: null,\n    defaultColDef: {\n      // tooltipComponent: \"customTooltip\",\n      resizeable: true,\n      tooltipValueGetter: toolTipValueGetter,\n      tooltipComponentFramework: \"customTooltip\",\n    },\n    missingRules: [\"Empty\"],\n    missingRulesDialog: false,\n    version: version,\n    flipColumns: true,\n    flipColumnsLoading: false,\n    overlayLoadingTemplate: null,\n    rowSelection: null,\n  }),\n  created() {\n    this.overlayLoadingTemplate =\n      '<span class=\"ag-overlay-loading-center\">Please wait while your rows are loading</span>';\n    this.initialize();\n  },\n\n  methods: {\n    initialize() {\n      this.parsePacks();\n    },\n    toolTipValueGetter(params) {\n      console.log(params);\n      return { value: params.value };\n    },\n    rule_set() {\n      this.log(\"Parsing Config Packs with Row RuleSet\");\n      // this.gridApi.showLoadingOverlay();\n      this.data = [...data_rule_set];\n      console.log(this.data_rule_set);\n      this.parseHeaders(this.data);\n    },\n    parsePacks() {\n      this.log(\"Parsing Config Packs\");\n      // this.gridApi.showLoadingOverlay();\n      this.data = [...data_rules];\n      this.parseHeaders(this.data);\n    },\n    parseHeaders(data) {\n      let headers = {};\n      let all_headers = data.flatMap((x) => Object.keys(x));\n      headers = [...new Set(all_headers)];\n      this.missingRules = data_headers.filter((x) => !headers.includes(x));\n      this.genHeaders(headers);\n      this.log(\"Completed Table Generation\");\n    },\n    onGridReady(params) {\n      this.gridApi = params.api;\n      this.gridColumnApi = params.columnApi;\n    },\n    genHeaders(headers) {\n      this.log(\"Generating Columns Names\");\n      let columns = [];\n      for (let item in headers) {\n        columns.push({\n          field: headers[item],\n          sortable: false,\n          filter: true,\n\n          resizable: true,\n          tooltipValueGetter: toolTipValueGetter,\n          tooltipComponentFramework: \"customTooltip\",\n        });\n      }\n      const isName = (element) => element.field == \"NAME\";\n      const isTotalCount = (element) => element.field == \"TOTAL_RULES\";\n      const isURL = (element) => element.field == \"URL\";\n\n      columns.splice(columns.findIndex(isName), 1);\n      columns.splice(columns.findIndex(isTotalCount), 1);\n      columns.splice(columns.findIndex(isURL), 1);\n\n      columns.push({\n        field: \"NAME\",\n        pinned: \"left\",\n        rowDrag: true,\n        lockPinned: false,\n        filterFramework: \"ruleSetFilter\",\n        filterParams: {\n          flipColumns: this.flipColumns,\n        },\n        width: 300,\n        sortable: true,\n        tooltipValueGetter: toolTipValueGetter,\n      });\n      if (this.flipColumns == true) {\n        columns.push({\n          field: \"TOTAL_RULES\",\n          pinned: \"left\",\n          rowDrag: false,\n          lockPinned: false,\n          width: 130,\n          sortable: true,\n        });\n      }\n      columns.push({\n        field: \"URL\",\n        pinned: \"left\",\n        rowDrag: false,\n        lockPinned: false,\n        hide: true,\n      });\n      this.headers = columns;\n    },\n\n    log(message) {\n      let msg = `${new Date(Date.now()).toLocaleTimeString()} :  ${message}`;\n      this.logMsg = msg;\n      console.log(message);\n    },\n    downloadCSV() {\n      this.gridApi.exportDataAsCsv();\n    },\n    toCF() {\n      this.log(\"Cloudformation\");\n      cfinput(this.gridApi.getSelectedNodes(), this.flipColumns);\n    },\n    flipColumnsTable() {\n      console.log(this.gridApi);\n      // console.log(this.gridColumnApi);\n      const filterinstance = this.gridApi.getFilterInstance(\"NAME\");\n      const vueFilterInstance = filterinstance.getFrameworkComponentInstance();\n\n      this.data = \"\";\n      console.log(\"flipcolumnsloading is\", this.flipColumnsLoading);\n      if (this.flipColumns) {\n        this.flipColumnsLoading = true;\n        console.log(\"default\");\n        this.parsePacks();\n        // this.flipColumnsLoading = false;\n      } else if (this.flipColumns == false) {\n        this.flipColumnsLoading = true;\n        console.log(\"flip columns\");\n        this.rule_set();\n        // this.flipColumnsLoading = false;\n        console.log(this.flipColumnsLoading);\n      }\n      console.log(\"start\");\n      console.log(\"flipcolumnsloading is\", this.flipColumnsLoading);\n\n      this.gridApi.showLoadingOverlay();\n      setTimeout(() => {\n        vueFilterInstance.initData();\n        console.log(\"end\");\n        this.flipColumnsLoading = false;\n      }, 1000);\n    },\n  },\n  components: {\n    \"ag-grid-vue\": AgGridVue,\n    // eslint-disable-next-line vue/no-unused-components\n    ruleSetFilter: ruleSetFilter,\n\n    // eslint-disable-next-line vue/no-unused-components\n    customTooltip: customTooltip,\n  },\n};\n</script>\n\n<style>\n.tooltip {\n  position: absolute;\n}\n\n.tooltip.ag-tooltip-hiding {\n  opacity: 0;\n}\n\n.tooltip p {\n  font-weight: bold;\n  background-color: skyblue;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Table.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Table.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Table.vue?vue&type=template&id=2ddc2577&\"\nimport script from \"./Table.vue?vue&type=script&lang=js&\"\nexport * from \"./Table.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Table.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VSwitch } from 'vuetify/lib/components/VSwitch';\nimport { VToolbar } from 'vuetify/lib/components/VToolbar';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VCardTitle,VCol,VDialog,VDivider,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VIcon,VRow,VSpacer,VSwitch,VToolbar})\n","<template>\n  <v-app>\n    <v-app-bar app color=\"primary\" dark>\n      <v-app-bar-title>\n        Table of Managed Config Conformance Packs and included rules with Export\n        to CSV and Filter Options</v-app-bar-title\n      >\n    </v-app-bar>\n\n    <v-main>\n      <Table />\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport Table from \"./components/Table\";\n\nexport default {\n  name: \"App\",\n\n  components: {\n    Table,\n  },\n\n  data: () => ({\n    //\n  }),\n};\n</script>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=a9d7eb40&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\nimport { VAppBar } from 'vuetify/lib/components/VAppBar';\nimport { VAppBarTitle } from 'vuetify/lib/components/VAppBar';\nimport { VMain } from 'vuetify/lib/components/VMain';\ninstallComponents(component, {VApp,VAppBar,VAppBarTitle,VMain})\n","import Vue from 'vue';\nimport Vuetify from 'vuetify/lib/framework';\n\nVue.use(Vuetify);\n\nexport default new Vuetify({\n});\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","import Vue from 'vue'\nimport App from './App.vue'\nimport vuetify from './plugins/vuetify'\nimport './registerServiceWorker'\n\nVue.config.productionTip = false\n\nnew Vue({\n  vuetify,\n  render: h => h(App)\n}).$mount('#app')\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Table.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./customTooltip.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}